{"version":3,"file":"js/app.21c79237.js","mappings":"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","sources":["webpack://power-blocks/./src/App.vue","webpack://power-blocks/./src/components/GameBoard.vue","webpack://power-blocks/./src/components/ScoreBoard.vue","webpack://power-blocks/./src/components/ScoreBoard.vue?b1f1","webpack://power-blocks/./src/components/GameGrid.vue","webpack://power-blocks/./src/components/GameGrid.vue?a4c6","webpack://power-blocks/./src/components/ShapeSelection.vue","webpack://power-blocks/./src/components/Block.vue","webpack://power-blocks/./src/components/Block.vue?92b4","webpack://power-blocks/./src/components/ShapeSelection.vue?b619","webpack://power-blocks/./src/components/CustomPieceCreator.vue","webpack://power-blocks/./src/components/CustomPieceCreator.vue?1be7","webpack://power-blocks/./src/components/SelectShapes.vue","webpack://power-blocks/./src/components/SelectShapes.vue?0d3b","webpack://power-blocks/./src/firebase/firebase.js","webpack://power-blocks/./src/components/GameBoard.vue?b7d7","webpack://power-blocks/./src/App.vue?7ccd","webpack://power-blocks/./src/main.js","webpack://power-blocks/webpack/bootstrap","webpack://power-blocks/webpack/runtime/chunk loaded","webpack://power-blocks/webpack/runtime/compat get default export","webpack://power-blocks/webpack/runtime/define property getters","webpack://power-blocks/webpack/runtime/global","webpack://power-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://power-blocks/webpack/runtime/jsonp chunk loading","webpack://power-blocks/webpack/startup"],"sourcesContent":["<template>\n  <GameBoard />\n</template>\n\n<script>\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Comic Sans MS', 'Comic Sans', cursive;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #fff;\n}\n</style>\n","<template>\n    <div class=\"game-board\">\n        <div class=\"title\">Power Blocks!!</div>\n        \n        <ScoreBoard :highScore=\"highScore\" :scoreDisplay=\"scoreDisplay\" :isHighScoreAnimated=\"isHighScoreAnimated\" />\n        <div class=\"grid-container\">\n            <GameGrid :board=\"board\" :hoverCells=\"hoverCells\" @dragover=\"handleDragOver\" @drop=\"handleDrop\"\n                ref=\"gameBoard\" />\n            <!-- Score animations -->\n            <div v-for=\"animation in scoreAnimations\" :key=\"animation.id\" class=\"score-animation\"\n                :style=\"getAnimationStyle(animation)\">\n                +{{ animation.points }} <br> <span class=\"score-text\">{{ animation.text }}</span>\n            </div>\n        </div>\n        <ShapeSelection :shapes=\"shapes\" :currentShapes=\"currentShapes\" @shapeClicked=\"handleShapeClicked\"\n            @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" />\n\n        <div v-if=\"gameOver\" class=\"game-over-overlay\">\n            <div class=\"game-over-message\">Game Over!</div>\n            <button @click=\"resetBoard\" class=\"restart-button\">Restart</button>\n            <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Undo</button>\n        </div>\n\n        <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Undo</button>\n        \n        <button @click=\"openCustomPieceCreator\" class=\"create-piece-button\">Create Custom Piece</button>\n        <button @click=\"openSelectShapes\" class=\"gear-button\"></button>\n        <a href=\"https://github.com/leonardoad/power-blocks\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"github-badge\">\n            <svg height=\"15\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"15\" data-view-component=\"true\" class=\"github-icon\">\n                <path d=\"M12 1C5.9225 1 1 5.9225 1 12C1 16.8675 4.14875 20.9787 8.52125 22.4362C9.07125 22.5325 9.2775 22.2025 9.2775 21.9137C9.2775 21.6525 9.26375 20.7862 9.26375 19.865C6.5 20.3737 5.785 19.1912 5.565 18.5725C5.44125 18.2562 4.905 17.28 4.4375 17.0187C4.0525 16.8125 3.5025 16.3037 4.42375 16.29C5.29 16.2762 5.90875 17.0875 6.115 17.4175C7.105 19.0812 8.68625 18.6137 9.31875 18.325C9.415 17.61 9.70375 17.1287 10.02 16.8537C7.5725 16.5787 5.015 15.63 5.015 11.4225C5.015 10.2262 5.44125 9.23625 6.1425 8.46625C6.0325 8.19125 5.6475 7.06375 6.2525 5.55125C6.2525 5.55125 7.17375 5.2625 9.2775 6.67875C10.1575 6.43125 11.0925 6.3075 12.0275 6.3075C12.9625 6.3075 13.8975 6.43125 14.7775 6.67875C16.8813 5.24875 17.8025 5.55125 17.8025 5.55125C18.4075 7.06375 18.0225 8.19125 17.9125 8.46625C18.6138 9.23625 19.04 10.2125 19.04 11.4225C19.04 15.6437 16.4688 16.5787 14.0213 16.8537C14.42 17.1975 14.7638 17.8575 14.7638 18.8887C14.7638 20.36 14.75 21.5425 14.75 21.9137C14.75 22.2025 14.9563 22.5462 15.5063 22.4362C19.8513 20.9787 23 16.8537 23 12C23 5.9225 18.0775 1 12 1Z\"></path>\n            </svg>\n        </a>\n\n        <CustomPieceCreator :visible=\"isCustomPieceCreatorVisible\" @save=\"handleCustomPieceSave\"\n            @cancel=\"handleCustomPieceCancel\" />\n        <SelectShapes :visible=\"isSelectShapesVisible\" :shapes=\"shapes\" :initialSelectedShapes=\"selectedShapes\"\n            @save=\"handleSelectShapesSave\" @cancel=\"handleSelectShapesCancel\" />\n    </div>\n</template>\n\n<script>\nimport ScoreBoard from './ScoreBoard.vue';\nimport GameGrid from './GameGrid.vue';\nimport ShapeSelection from './ShapeSelection.vue';\nimport CustomPieceCreator from './CustomPieceCreator.vue';\nimport SelectShapes from './SelectShapes.vue';\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase/firebase.js\";\n\nimport './GameBoard.css';\nexport default {\n    components: { CustomPieceCreator, GameGrid, ScoreBoard, ShapeSelection, SelectShapes },\n    name: 'GameBoard',\n    data() {\n        return {\n            board: Array.from({ length: 8 }, () => Array(8).fill(null)),\n            shapes: {\n                square: [\n                    [1, 1],\n                    [1, 1]\n                ],\n                line: [\n                    [1, 1, 1, 1, 1]\n                ],\n                line2: [\n                    [1],\n                    [1],\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line3: [\n                    [1, 1, 1]\n                ],\n                line4: [\n                    [1, 1]\n                ],\n                line5: [\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line6: [\n                    [1],\n                    [1]\n                ],\n                t: [\n                    [1, 1, 1],\n                    [0, 1, 0]\n                ],\n                t2: [\n                    [1, 0],\n                    [1, 1],\n                    [1, 0]\n                ],\n                t3: [\n                    [0, 1, 0],\n                    [1, 1, 1]\n                ],\n                t4: [\n                    [0, 1],\n                    [1, 1],\n                    [0, 1]\n                ],\n                single: [\n                    [1]\n                ],\n                l: [\n                    [1, 0],\n                    [1, 0],\n                    [1, 1]\n                ],\n                l2: [\n                    [1, 1],\n                    [0, 1],\n                    [0, 1]\n                ],\n                l3: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 0]\n                ],\n                l4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                ],\n                l5: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                ],\n                j: [\n                    [0, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                s: [\n                    [0, 1, 1],\n                    [1, 1, 0]\n                ],\n                z: [\n                    [1, 1, 0],\n                    [0, 1, 1]\n                ],\n                bCorner: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                    [1, 0, 0]\n                ],\n                bCorner2: [\n                    [0, 0, 1],\n                    [0, 0, 1],\n                    [1, 1, 1]\n                ],\n                bCorner3: [\n                    [1, 0, 0],\n                    [1, 0, 0],\n                    [1, 1, 1]\n                ],\n                bCorner4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                    [0, 0, 1]\n                ],\n                bSquare: [\n                    [1, 1, 1],\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle: [\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle2: [\n                    [1, 1],\n                    [1, 1],\n                    [1, 1]\n                ],\n                corner: [\n                    [1, 1],\n                    [0, 1]\n                ],\n                corner2: [\n                    [1, 0],\n                    [1, 1]\n                ],\n                corner3: [\n                    [0, 1],\n                    [1, 1]\n                ],\n                corner4: [\n                    [1, 1],\n                    [1, 0]\n                ],\n                u: [\n                    [1, 0, 1],\n                    [1, 1, 1]\n                ],\n                u2: [\n                    [1, 1, 1],\n                    [1, 0, 1]\n                ],\n                u3: [\n                    [1, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                u4: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 1]\n                ],\n\n            },\n            powers: ['bomb', 'fill-bomb', 'remove-row', 'remove-column', 'fill-row', 'fill-column', 'cross-bomb','cross-fill', 'fill-all'],\n            // powers: ['fill-all', 'fill-bomb', 'fill-row', 'fill-column', 'cross-fill'],\n            colors: ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF'],\n            currentShapes: [],\n            selectedShape: {\n                name: '',\n                color: '',\n                power: '',\n                id: ''\n            },\n            selectedShapeColor: '',\n            selectedShapePower: '',\n            gameOver: false,\n            score: 0,\n            scoreDisplay: 0,\n            highScore: 0,\n            isHighScoreAnimated: false,\n            hoverCells: [],\n            history: [], // Add history array\n            isCustomPieceCreatorVisible: false, // Add visibility state for custom piece creator\n            isSelectShapesVisible: false, // Add visibility state for select shapes\n            selectedShapes: [], // Add selected shapes array\n            combo: 0, // Add combo counter\n            rowsOrColumnsCompleted: false, // Track if any rows/columns were completed in the current round\n            scoreAnimations: [], // Track score animations\n        };\n    },\n    watch: {\n        score(newValue, oldValue) {\n            this.incrementScoreDisplay(newValue, oldValue);\n            if (newValue > this.highScore) {\n                this.animateHighScore();\n            }\n        }\n    },\n    methods: {\n        async logEvent(eventType, eventData = {}) {\n            try {\n                await addDoc(collection(db, \"events\"), {\n                    type: eventType,\n                    data: eventData,\n                    timestamp: new Date()\n                });\n            } catch (e) {\n                console.error(\"Error logging event: \", e);\n            }\n        },\n        incrementScoreDisplay(newValue, oldValue) {\n            if (newValue > oldValue) {\n                let increment = 1;\n                if (newValue - oldValue > 50) {\n                    increment = 10;\n                } else if (newValue - oldValue > 10) {\n                    increment = 5;\n                }\n                const interval = setInterval(() => {\n                    this.scoreDisplay += increment;\n                    if (this.scoreDisplay >= this.score) {\n                        this.scoreDisplay = this.score;\n                        clearInterval(interval);\n                    }\n                }, 1);\n            } else {\n                this.scoreDisplay = this.score;\n            }\n        },\n        animateHighScore() {\n            this.isHighScoreAnimated = true;\n            setTimeout(() => {\n                this.isHighScoreAnimated = false;\n            }, 1000); // Duration of the animation\n        },\n        resetBoard() {\n            this.logEvent(\"game_reset\", { score: this.score });\n            this.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n            this.gameOver = false;\n            this.highScore = Math.max(this.score, this.highScore);\n            this.score = 0;\n            this.combo = 0;\n            this.rowsOrColumnsCompleted = false;\n            this.history = []; // Clear history on reset\n            this.getRandomShapes();\n            this.saveState();\n        },\n        addShape(shape, row, col) {\n            if (this.checkCollision(shape, row, col)) return;\n            this.saveHistory();\n\n            let shapeBlocks = 0;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.board[row + i][col + j] = this.selectedShape.color;\n                        shapeBlocks++;\n                    }\n                }\n            }\n            this.score += shapeBlocks; // Points for placing the shape\n            this.removeShape(this.selectedShape);\n\n            if (this.selectedShape.power) {\n                this.applyPowerEffect(this.selectedShape.power, row, col);\n            }\n\n            let { completedRows, rowPositions } = this.checkRows();\n            let { completedColumns, colPositions } = this.checkColumns();\n            let totalCompleted = completedRows + completedColumns;\n\n            if (totalCompleted > 0) {\n                this.combo++;\n                const rowPoints = completedRows * 10; // Points for completed rows/columns\n                const colPoints = completedColumns * 10; // Points for completed columns\n                const rowColPoints = totalCompleted * 10; // Points for completed rows/columns\n                const multiBonus = totalCompleted > 1 ? totalCompleted * 10 : 0; // Bonus for multiple rows/columns\n                const comboBonus = this.combo * 10; // Combo bonus\n                const totalPoints = rowColPoints + multiBonus + comboBonus;\n\n                this.score += totalPoints;\n                this.rowsOrColumnsCompleted = true; // Mark that rows/columns were completed\n\n                // Show score animations for completed rows\n                if (completedRows > 0) {\n                    if (multiBonus + comboBonus > 0) {\n                        this.showScoreAnimation(multiBonus + comboBonus, rowPositions[0], 0, true, \"Combo\");\n                    } else {\n                        this.showScoreAnimation(rowPoints, rowPositions[0], 0, true, \"Good\");\n                    }\n                }\n\n                // Show score animations for completed columns\n                if (completedColumns > 0) {\n                    if (multiBonus + comboBonus > 0) {\n                        this.showScoreAnimation(multiBonus + comboBonus, 0, colPositions[0], false, \"Combo\");\n                    } else {\n                        this.showScoreAnimation(colPoints, 0, colPositions[0], false, \"Good\");\n                    }\n                }\n\n            }\n            \n            this.updateBoard(rowPositions, colPositions);\n\n\n            \n            if (this.currentShapes.length === 0) {\n                if (!this.rowsOrColumnsCompleted) {\n                    this.combo = 0; // Reset combo if no rows/columns were completed in the last play of the round\n                }\n                \n                setTimeout(() => {\n                    this.getRandomShapes();\n                }, 600); // Delay to allow the animations to complete\n\n            }\n            setTimeout(() => {\n\n                this.gameOver = this.checkGameOver();\n                this.saveState(); // Save the current state after adding the shape\n            }, 1000); // Delay to allow the animations to complete\n\n        },\n        updateBoard(rowPositions, colPositions) {\n            rowPositions.forEach(row => {\n                this.removeRow(row);\n            });\n            colPositions.forEach(col => {\n                this.removeColumn(col);\n            });\n            \n            setTimeout(() => {\n                if (this.checkBoardClear()) {\n                    this.score += 300; // Bonus for clearing the board \n                    this.showScoreAnimation(300, 4, 4, true, \"Clear\");\n                }\n            }, 500); // Delay to allow the animations to complete\n            \n        },\n        applyPowerEffect(power, row, col) {\n            switch (power) {\n                case 'bomb':\n                    this.applyBombPower(row, col);\n                    break;\n                case 'fill-bomb':\n                    this.applyFillBombPower(row, col);\n                    break;\n                case 'cross-bomb':\n                    this.applyCrossBombPower(row, col);\n                    break;\n                case 'cross-fill':\n                    this.applyCrossFillPower(row, col);\n                    break;\n                case 'fill-all':\n                    this.applyFillAllPower();\n                    break;\n                case 'remove-row':\n                    this.applyRemoveRowPower(row);\n                    break;\n                case 'remove-column':\n                    this.applyRemoveColumnPower(col);\n                    break;\n                case 'fill-row':\n                    this.applyFillRowPower(row);\n                    break;\n                case 'fill-column':\n                    this.applyFillColumnPower(col);\n                    break;\n            }\n        },\n        applyBombPower(row, col) {\n            for (let i = row - 1; i <= row + 1; i++) {\n                for (let j = col - 1; j <= col + 1; j++) {\n                    if (this.board[i] && this.board[i][j] !== undefined) {\n                        this.board[i][j] = null;\n                    }\n                }\n            }\n        },\n        applyCrossBombPower(row, col) {\n            for (let i = 0; i < this.board.length; i++) {\n                this.board[i][col] = null;\n            }\n            for (let j = 0; j < this.board[0].length; j++) {\n                this.board[row][j] = null;\n            }\n        },\n        applyFillAllPower() {\n            this.board = this.board.map(row => row.map(cell => (cell === null ? this.selectedShape.color : cell)));\n        },\n        applyCrossFillPower(row, col) {\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i][col] === null) {\n                    this.board[i][col] = this.selectedShape.color;\n                }\n            }\n            for (let j = 0; j < this.board[0].length; j++) {\n                if (this.board[row][j] === null) {\n                    this.board[row][j] = this.selectedShape.color;\n                }\n            }\n        },\n        applyFillBombPower(row, col) {\n            for (let i = row - 1; i <= row + 1; i++) {\n                for (let j = col - 1; j <= col + 1; j++) {\n                    if (this.board[i] && this.board[i][j] !== undefined) {\n                        if (this.board[i][j] === null) {\n                            this.board[i][j] = this.selectedShape.color;\n                        }\n                    }\n                }\n            }\n        },\n        applyRemoveRowPower(row) {\n            this.removeRow(row);\n        },\n        applyFillRowPower(row) {\n            this.board[row] = this.board[row].map(cell => (cell === null ? this.selectedShape.color : cell));\n        },\n        applyFillColumnPower(col) {\n            this.board.forEach(row => row[col] = row[col] === null ? this.selectedShape.color : row[col]);\n        },\n        applyRemoveColumnPower(col) {\n            this.removeColumn(col);\n        },\n        checkBoardClear() {\n            return this.board.every(row => row.every(block => block === null));\n        },\n        checkCollision(shape, row, col) {\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        if (this.board[row + i] === undefined || this.board[row + i][col + j] === undefined || this.board[row + i][col + j] !== null) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        },\n        checkRows() {\n            let rowPositions = [];\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i].every(block => block !== null)) {\n                    rowPositions.push(i);\n                }\n            }\n            return { completedRows: rowPositions.length, rowPositions };\n        },\n        removeRow(row) {\n            this.board[row].forEach((block, index) => {\n                setTimeout(() => {\n                    this.board[row].splice(index, 1, null);\n                }, index * 10);\n            });\n        },\n        checkColumns() {\n            let colPositions = [];\n            for (let i = 0; i < this.board[0].length; i++) {\n                if (this.board.every(row => row[i] !== null)) {\n                    colPositions.push(i);\n                }\n            }\n            return { completedColumns: colPositions.length, colPositions };\n        },\n        removeColumn(col) {\n            this.board.forEach((row, index) => {\n                setTimeout(() => {\n                    this.board[index].splice(col, 1, null);\n                }, index * 10);\n            });\n        },\n        checkGameOver() {\n            //the game is over when there is no space available for the next shape\n            for (let shape of this.currentShapes) {\n                for (let row = 0; row <= this.board.length - this.shapes[shape.name].length; row++) {\n                    for (let col = 0; col <= this.board[0].length - this.shapes[shape.name][0].length; col++) {\n                        if (!this.checkCollision(this.shapes[shape.name], row, col)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        handleShapeClicked(event) {\n            this.logEvent(\"shape_clicked\", { shape: event.name });\n            this.selectedShape = { name: event.name, color: event.color, power: event.power, id: event.id }; // store shape details\n        },\n        handleShapeDragged(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.updateHoverCells(this.shapes[this.selectedShape.name], row, col);\n        },\n        handleShapeDropped(event) {\n            this.logEvent(\"shape_dropped\", { shape: this.selectedShape.name });\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.addShape(this.shapes[this.selectedShape.name], row, col);\n            this.clearHoverCells();\n        },\n        handleDrop(event) {\n            const name = event.dataTransfer.getData('name');\n            if (!name) return;\n            const offsetX = parseFloat(event.dataTransfer.getData('offsetX'));\n            const offsetY = parseFloat(event.dataTransfer.getData('offsetY'));\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n            this.addShape(this.shapes[name], row, col);\n            this.clearHoverCells();\n        },\n        removeShape(shape) {\n            const index = this.currentShapes.findIndex(s => s.id === shape.id);\n            if (index > -1) {\n                this.currentShapes.splice(index, 1);\n            }\n        },\n        getRandomShapes() {\n            //select 3 random shapes from the shapes object and add to the currentShapes array the shapes can be repeated\n            this.currentShapes = Array.from({ length: 3 }, () => {\n                const shapeName = this.selectedShapes[Math.floor(Math.random() * this.selectedShapes.length)];\n                return { name: shapeName, id: Date.now() + Math.random() };\n            });\n\n            this.currentShapes.forEach(shape => {\n                shape.color = this.colors[Math.floor(Math.random() * this.colors.length)];\n            });\n\n            this.currentShapes.forEach(shape => {\n                if (shape.name === 'single') {\n                    shape.power = this.powers[Math.floor(Math.random() * this.powers.length)];\n                }\n            });\n            if (this.checkGameOver()) {\n                this.getRandomShapes();\n            }\n\n            this.rowsOrColumnsCompleted = false; // Reset for the new round\n        },\n        applyCellStyle(block) {\n            if (block !== null) {\n                return {\n                    background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n                };\n            }\n            return {};\n        },\n        updateHoverCells(shape, row, col) {\n            this.hoverCells = [];\n            if (this.checkCollision(shape, row, col)) return;\n\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.hoverCells.push({ row: row + i, col: col + j });\n                    }\n                }\n            }\n\n            // Add special shadows for power blocks\n            if (this.selectedShape.power) {\n                this.addPowerHoverCells(row, col, this.selectedShape.power);\n            }\n        },\n        addPowerHoverCells(row, col, power) {\n            const addCells = (rowStart, rowEnd, colStart, colEnd, remove) => {\n                for (let i = rowStart; i <= rowEnd; i++) {\n                    for (let j = colStart; j <= colEnd; j++) {\n                        if (this.board[i] && this.board[i][j] !== undefined) {\n                            this.hoverCells.push({ row: i, col: j, remove });\n                        }\n                    }\n                }\n            };\n\n            switch (power) {\n                case 'bomb':\n                    addCells(row - 1, row + 1, col - 1, col + 1, true);\n                    break;\n                case 'cross-bomb':\n                    addCells(0, this.board.length - 1, col, col, true);\n                    addCells(row, row, 0, this.board[0].length - 1, true);\n                    break;\n                case 'cross-fill':\n                    addCells(0, this.board.length - 1, col, col, false);\n                    addCells(row, row, 0, this.board[0].length - 1, false);\n                    break;\n                case 'fill-all':\n                    this.hoverCells = this.board.flatMap((r, i) => r.map((c, j) => ({ row: i, col: j, remove: false })));\n                    break;\n                case 'remove-row':\n                    addCells(row, row, 0, this.board[0].length - 1, true);\n                    break;\n                case 'remove-column':\n                    addCells(0, this.board.length - 1, col, col, true);\n                    break;\n                case 'fill-row':\n                    addCells(row, row, 0, this.board[0].length - 1, false);\n                    break;\n                case 'fill-column':\n                    addCells(0, this.board.length - 1, col, col, false);\n                    break;\n                case 'fill-bomb':\n                    addCells(row - 1, row + 1, col - 1, col + 1, false);\n                    break;\n                default:\n                    break;\n            }\n        },\n        clearHoverCells() {\n            this.hoverCells = [];\n        },\n        saveHistory() {\n            this.history.push({\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes))\n            });\n        },\n        saveState() {\n            // Save the current state of the board and the score\n            const state = {\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes)),\n                selectedShape: this.selectedShape,\n                history: JSON.parse(JSON.stringify(this.history)),\n                selectedShapes: this.selectedShapes,\n                highScore: this.highScore,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted\n            };\n            localStorage.setItem('gameState', JSON.stringify(state));\n        },\n        undoMove() {\n            if (this.history.length > 0) {\n                const previousState = this.history.pop();\n                this.board = previousState.board;\n                this.score = previousState.score;\n                this.currentShapes = previousState.currentShapes;\n                this.gameOver = false;\n                this.combo = previousState.combo;\n                this.rowsOrColumnsCompleted = previousState.rowsOrColumnsCompleted;\n            }\n        },\n        openCustomPieceCreator() {\n            this.isCustomPieceCreatorVisible = true;\n        },\n        handleCustomPieceSave(grid) {\n            this.logEvent(\"custom_piece_created\", { grid });\n            this.isCustomPieceCreatorVisible = false;\n            const customShape = grid.map(row => row.map(cell => (cell ? 1 : 0)));\n            this.shapes.custom = customShape;\n            this.currentShapes.push({ name: 'custom', color: '#' + Math.floor(Math.random() * 16777215).toString(16) });\n            this.saveState();\n        },\n        handleCustomPieceCancel() {\n            this.isCustomPieceCreatorVisible = false;\n        },\n        openSelectShapes() {\n            this.isSelectShapesVisible = true;\n        },\n        handleSelectShapesSave(selectedShapes) {\n            this.isSelectShapesVisible = false;\n            this.selectedShapes = selectedShapes;\n            this.getRandomShapes();\n            this.saveState();\n        },\n        handleSelectShapesCancel() {\n            this.isSelectShapesVisible = false;\n        },\n        showScoreAnimation(points, row, col, isRow, text) {\n            const animation = {\n                points,\n                row,\n                col,\n                isRow,\n                text,\n                id: Date.now() // Unique ID for each animation\n            };\n            this.scoreAnimations.push(animation);\n            setTimeout(() => {\n                this.scoreAnimations = this.scoreAnimations.filter(anim => anim.id !== animation.id);\n            }, 2000); // Duration of the animation\n        },\n        getAnimationStyle(animation) {\n            const size = 40; // Assuming each cell is 40x40 pixels\n            const top = animation.isRow ? ((animation.row) * size) : size * 4;\n            const left = animation.isRow ? size * 4 : ((animation.col + 1) * size);\n            return {\n                top: `${top}px`,\n                left: `${left}px`,\n                transition: 'transform 0.5s, opacity 0.5s',\n                opacity: 1,\n            };\n        },\n    },\n    mounted() {\n        this.logEvent(\"page_view\", { page: \"GameBoard\" });\n        const savedGameState = localStorage.getItem('gameState');\n        if (savedGameState) {\n            const state = JSON.parse(savedGameState);\n            this.board = state.board;\n            this.score = state.score;\n            this.currentShapes = state.currentShapes;\n            this.selectedShape = state.selectedShape;\n            this.history = state.history;\n            this.selectedShapes = state.selectedShapes;\n            this.highScore = state.highScore;\n            this.combo = state.combo;\n            this.rowsOrColumnsCompleted = state.rowsOrColumnsCompleted;\n        } else {\n            this.selectedShapes = Object.keys(this.shapes);\n            this.resetBoard();\n        }\n\n    }\n}\n</script>\n","<template>\n  <div class=\"score-board\">\n    <div class=\"high-score\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" fill=\"currentColor\">\n        <path\n          d=\"M17 3H7c-1.1 0-2 .9-2 2v3c0 3.31 2.69 6 6 6v3H8v2h8v-2h-3v-3c3.31 0 6-2.69 6-6V5c0-1.1-.9-2-2-2zm0 5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5h8v3z\" />\n      </svg>\n      {{ highScore }}\n    </div>\n    <div class=\"score\" :class=\"{ highlight: isHighScoreAnimated }\">{{ scoreDisplay }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ScoreBoard',\n  props: {\n    highScore: {\n      type: Number,\n      required: true\n    },\n    scoreDisplay: {\n      type: Number,\n      required: true\n    },\n    isHighScoreAnimated: {\n      type: Boolean,\n      required: true\n    }\n  }\n};\n</script>","import { render } from \"./ScoreBoard.vue?vue&type=template&id=0d8b5e1b\"\nimport script from \"./ScoreBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid\" @dragover.prevent=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\">\n    <div class=\"row\" v-for=\"(row, rowIndex) in board\" :key=\"`grid-${rowIndex}`\">\n      <div class=\"cell\" v-for=\"(block, blockIndex) in row\" :key=\"`cell-${rowIndex}-${blockIndex}`\"\n           :class=\"{ 'filled-cell': block, 'hover-cell': isHoverCell(rowIndex, blockIndex), 'hover-x': isRemoveCell(rowIndex, blockIndex) }\"\n           :style=\"applyCellStyle(block)\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameGrid',\n  props: {\n    board: {\n      type: Array,\n      required: true\n    },\n    hoverCells: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleDragOver(event) {\n      this.$emit('dragover', event);\n    },\n    handleDrop(event) {\n      this.$emit('drop', event);\n    },\n    isHoverCell(row, col) {\n      return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n    },\n    isRemoveCell(row, col) {\n      // Check if the cell is marked for removal\n      // This assumes that hoverCells can contain both hover and remove states\n      // the HoverCells array should have a property to distinguish between hover and remove\n      return this.hoverCells.some(cell => cell.row === row && cell.col === col && cell.remove);\n    },\n    applyCellStyle(block) {\n      if (block !== null) {\n        return {\n          background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n        };\n      }\n      return {};\n    }\n  }\n};\n</script>\n","import { render } from \"./GameGrid.vue?vue&type=template&id=7d89574c\"\nimport script from \"./GameGrid.vue?vue&type=script&lang=js\"\nexport * from \"./GameGrid.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"shape-selection\">\n    <div v-for=\"(shape, index) in currentShapes\" :key=\"`${shape.name}-${index}`\">\n      <Block :shape=\"shapes[shape.name]\" :name=\"shape.name\" :index=\"index\" @shapeClicked=\"handleShapeClicked\"\n             @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" :color=\"shape.color\" :power=\"shape.power\" :id=\"shape.id\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'ShapeSelection',\n  components: { Block },\n  props: {\n    shapes: {\n      type: Object,\n      required: true\n    },\n    currentShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleShapeClicked(event) {\n      this.$emit('shapeClicked', event);\n    },\n    handleShapeDragged(event) {\n      this.$emit('shapeDragged', event);\n    },\n    handleShapeDropped(event) {\n      this.$emit('shapeDropped', event);\n    }\n  }\n};\n</script>","<template>\n  <div class=\"shape\" \n       @mousedown=\"handleMouseDown\" \n       @mousemove=\"handleMouseMove\" \n       @mouseup=\"handleMouseUp\" \n       @touchstart=\"handleTouchStart\"\n       @touchmove=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       :style=\"shapeStyle\">\n      <div class=\"row\" v-for=\"(row, rowIndex) in shape\" :key=\"rowIndex\">\n          <div class=\"block\" :class=\"{'fill': applyStyles(rowIndex, blockIndex), 'dragging': isDragging}\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"  :style=\"applyStyles(rowIndex, blockIndex)\">\n          </div>\n      </div>\n  </div>\n  {{ power }}\n</template>\n\n<script>\nimport './Block.css';\nconst OFFSET_Y_MOUSE = 0;\nconst OFFSET_Y_TOUCH = 150;\nexport default {\n  name: 'BlockComponent',\n  props: {\n    name: {\n      type: String,\n      required: false,\n      default: 'Block'\n    },\n    shape: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    disableDragging: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      required: true\n    },\n    power: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    id: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      blockStyle: {},\n      offsetX: 0,\n      offsetY: 0,\n      touchCurrentX: 0,\n      touchCurrentY: 0,\n      isDragging: false,\n    };\n  },\n  computed: {\n    shapeStyle() {\n      if (this.isDragging) {\n        return {\n          position: 'absolute',\n          left: `${this.touchCurrentX}px`,\n          top: `${this.touchCurrentY}px`,\n          zIndex: 1000,\n        };\n      }\n      return {};\n    }\n  },\n  methods: {\n    applyStyles(rowIndex, blockIndex) {\n      if (!this.shape) return;\n      if(this.shape[rowIndex][blockIndex]) {\n        return {\n          background: `linear-gradient(145deg, ${this.color}, ${this.color} 50%, ${this.color} 50%, ${this.color} 100%)`,\n        }\n      }\n    },\n    handleMouseDown(event) {\n      if (this.disableDragging) return;\n      const rect = event.target.getBoundingClientRect();\n      this.offsetX = event.clientX - rect.left;\n      this.offsetY = event.clientY - rect.top;\n\n      this.touchCurrentX = event.clientX - this.offsetX;\n      this.touchCurrentY = event.clientY - this.offsetY - OFFSET_Y_MOUSE;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color, power: this.power, id: this.id});\n    },\n    handleMouseMove(event) {\n      event.preventDefault();\n      if (!this.isDragging || this.disableDragging) return;\n      this.touchCurrentX = event.clientX - this.offsetX;\n      this.touchCurrentY = event.clientY - this.offsetY - OFFSET_Y_MOUSE;\n      this.$emit('shapeDragged', { name: this.name, clientX: event.clientX, clientY: event.clientY - this.offsetY - OFFSET_Y_MOUSE, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleMouseUp(event) {\n      if (this.disableDragging) return;\n      this.isDragging = false;\n      this.$emit('shapeDropped', { name: this.name, clientX: event.clientX, clientY: event.clientY - OFFSET_Y_MOUSE, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchStart(event) {\n      if (this.disableDragging) return;\n      event.preventDefault();\n      const rect = event.target.parentElement.getBoundingClientRect();\n      this.offsetX = event.touches[0].clientX - rect.left;\n      this.offsetY = event.touches[0].clientY - rect.top;\n\n      this.touchCurrentX = event.touches[0].clientX - this.offsetX;\n      this.touchCurrentY = (event.touches[0].clientY - this.offsetY) - OFFSET_Y_TOUCH;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color, power: this.power, id: this.id});\n    },\n    handleTouchMove(event) {\n      if (this.disableDragging) return;\n      const touch = event.touches[0];\n      this.touchCurrentX = touch.clientX - this.offsetX;\n      this.touchCurrentY = (touch.clientY - this.offsetY) - OFFSET_Y_TOUCH;\n      this.$emit('shapeDragged', { name: this.name, clientX: touch.clientX, clientY: (touch.clientY - this.offsetY) - OFFSET_Y_TOUCH, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchEnd(event) {\n      if (this.disableDragging) return;\n      this.isDragging = false;\n      const touch = event.changedTouches[0];\n      this.$emit('shapeDropped', { name: this.name, clientX: touch.clientX, clientY: touch.clientY - (OFFSET_Y_TOUCH), offsetX: this.offsetX, offsetY: this.offsetY});\n    },\n  },\n}\n</script>\n","import { render } from \"./Block.vue?vue&type=template&id=4669e531\"\nimport script from \"./Block.vue?vue&type=script&lang=js\"\nexport * from \"./Block.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ShapeSelection.vue?vue&type=template&id=41ea72b1\"\nimport script from \"./ShapeSelection.vue?vue&type=script&lang=js\"\nexport * from \"./ShapeSelection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"custom-piece-overlay\" v-if=\"visible\">\n    <div class=\"custom-piece-overlay-content\">\n      <h2>Create Your Custom Piece</h2>\n      <div class=\"custom-piece-grid\">\n        <div class=\"custom-piece-row\" v-for=\"(row, rowIndex) in piece\" :key=\"rowIndex\">\n          <div class=\"custom-piece-cell\" v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\"\n               :class=\"{ 'filled': cell }\"\n               @click=\"toggleCell(rowIndex, cellIndex)\">\n          </div>\n        </div>\n      </div>\n      <div class=\"custom-piece-controls\">\n        <button class=\"custom-piece-button\" @click=\"savePiece\" :disabled=\"blockCount > 6\">Save</button>\n        <button class=\"custom-piece-button\" @click=\"cancel\">Cancel</button>\n      </div>\n      <p>Blocks: {{ blockCount }} / 6</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport './CustomPieceCreator.css';\nexport default {\n  name: 'CustomPieceCreator',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      piece: Array.from({ length: 4 }, () => Array(4).fill(0))\n    };\n  },\n  computed: {\n    blockCount() {\n      return this.piece.flat().filter(cell => cell === 1).length;\n    }\n  },\n  methods: {\n    toggleCell(row, col) {\n      if (this.piece[row][col] === 1) {\n        this.piece[row][col] = 0;\n      } else if (this.blockCount < 6) {\n        this.piece[row][col] = 1;\n      }\n    },\n    savePiece() {\n      this.$emit('save', this.piece);\n    },\n    cancel() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>","import { render } from \"./CustomPieceCreator.vue?vue&type=template&id=618b4f1e\"\nimport script from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\nexport * from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"select-shapes-overlay\" v-if=\"visible\">\n    <div class=\"select-shapes-content\">\n      <div class=\"select-shapes-header\">\n        <h2>Select Shapes</h2>\n      </div>\n      <div class=\"select-shapes-grid\">\n        <div\n          class=\"select-shapes-cell\"\n          v-for=\"(shape, shapeName) in shapes\"\n          :key=\"shapeName\"\n          :class=\"{ selected: selectedShapes.includes(shapeName) }\"\n          @click=\"toggleShapeSelection(shapeName)\"\n        >\n          <Block :shape=\"shape\" :name=\"shapeName\" :disableDragging=\"true\" />\n        </div>\n      </div>\n      <div class=\"select-shapes-controls\">\n        <button class=\"select-shapes-button\" @click=\"saveSelection\">Save</button>\n        <button class=\"select-shapes-button\" @click=\"cancelSelection\">Cancel</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'SelectShapes',\n  components: { Block },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    shapes: {\n      type: Object,\n      required: true\n    },\n    initialSelectedShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedShapes: []\n    };\n  },\n  watch: {\n    initialSelectedShapes: {\n      immediate: true,\n      handler(newVal) {\n        this.selectedShapes = [...newVal];\n      }\n    }\n  },\n  methods: {\n    toggleShapeSelection(shapeName) {\n      const index = this.selectedShapes.indexOf(shapeName);\n      if (index > -1) {\n        this.selectedShapes.splice(index, 1);\n      } else {\n        this.selectedShapes.push(shapeName);\n      }\n    },\n    saveSelection() {\n      this.$emit('save', this.selectedShapes);\n    },\n    cancelSelection() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>\n\n<style>\n.select-shapes-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.select-shapes-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 10px;\n}\n.select-shapes-header h2 {\n  margin: 0;\n  color: #fff;\n}\n\n.select-shapes-content {\n  background: linear-gradient(to bottom, #4358ad, #2c3e75);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 90%;\n  max-width: 600px;\n}\n\n.select-shapes-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  margin-bottom: 20px;\n  max-height: 70vh;\n  overflow-y: auto;\n}\n\n.select-shapes-cell {\n  background: #333;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.select-shapes-cell.selected {\n  background: #ff0;\n}\n\n.select-shapes-controls {\n  display: flex;\n  justify-content: space-between;\n}\n\n.select-shapes-button {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #232b54;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  color: #fff;\n  font-weight: bold;\n}\n\n.select-shapes-button:hover {\n  background-color: #1e264a;\n}\n</style>","import { render } from \"./SelectShapes.vue?vue&type=template&id=33038514\"\nimport script from \"./SelectShapes.vue?vue&type=script&lang=js\"\nexport * from \"./SelectShapes.vue?vue&type=script&lang=js\"\n\nimport \"./SelectShapes.vue?vue&type=style&index=0&id=33038514&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// src/firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCCOq_Wkd4Luo2R0h_7zxh3LtVYEiaIpHA\",\n  authDomain: \"powerblocks-77c00.firebaseapp.com\",\n  projectId: \"powerblocks-77c00\",\n  storageBucket: \"powerblocks-77c00.appspot.com\", // Corrected storageBucket\n  messagingSenderId: \"406963744715\",\n  appId: \"1:406963744715:web:fe3612a428c7e9819d104e\",\n  measurementId: \"G-N4C0V78KXT\" // Optional, can be removed if not using Analytics\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Firestore instance\nconst db = getFirestore(app);\n\nexport { db };","import { render } from \"./GameBoard.vue?vue&type=template&id=65aa18d4\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=db39d606\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=db39d606&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpower_blocks\"] = self[\"webpackChunkpower_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4330); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GameBoard","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_ScoreBoard","highScore","$data","scoreDisplay","isHighScoreAnimated","_hoisted_2","_component_GameGrid","board","hoverCells","onDragover","_ctx","handleDragOver","onDrop","$options","handleDrop","ref","_Fragment","_renderList","scoreAnimations","animation","id","style","_normalizeStyle","getAnimationStyle","_createTextVNode","_toDisplayString","points","_hoisted_3","text","_component_ShapeSelection","shapes","currentShapes","onShapeClicked","handleShapeClicked","onShapeDragged","handleShapeDragged","onShapeDropped","handleShapeDropped","gameOver","_hoisted_4","onClick","_cache","args","resetBoard","history","length","undoMove","_createCommentVNode","openCustomPieceCreator","openSelectShapes","href","target","rel","height","viewBox","version","width","d","_component_CustomPieceCreator","visible","isCustomPieceCreatorVisible","onSave","handleCustomPieceSave","onCancel","handleCustomPieceCancel","_component_SelectShapes","isSelectShapesVisible","initialSelectedShapes","selectedShapes","handleSelectShapesSave","handleSelectShapesCancel","xmlns","fill","$props","_normalizeClass","highlight","name","props","type","Number","required","Boolean","__exports__","_withModifiers","row","rowIndex","block","blockIndex","isHoverCell","isRemoveCell","applyCellStyle","Array","methods","event","this","$emit","col","some","cell","remove","background","shape","index","_component_Block","color","power","onMousedown","handleMouseDown","onMousemove","handleMouseMove","onMouseup","handleMouseUp","onTouchstart","handleTouchStart","onTouchmove","handleTouchMove","onTouchend","handleTouchEnd","shapeStyle","applyStyles","isDragging","OFFSET_Y_MOUSE","OFFSET_Y_TOUCH","String","default","disableDragging","data","blockStyle","offsetX","offsetY","touchCurrentX","touchCurrentY","computed","position","left","top","zIndex","rect","getBoundingClientRect","clientX","clientY","preventDefault","parentElement","touches","touch","changedTouches","components","Block","Object","piece","cellIndex","$event","toggleCell","_hoisted_5","savePiece","disabled","blockCount","_hoisted_6","cancel","from","flat","filter","shapeName","selected","includes","toggleShapeSelection","saveSelection","cancelSelection","watch","immediate","handler","newVal","indexOf","splice","push","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","CustomPieceCreator","GameGrid","ScoreBoard","ShapeSelection","SelectShapes","square","line","line2","line3","line4","line5","line6","t","t2","t3","t4","single","l","l2","l3","l4","l5","j","s","z","bCorner","bCorner2","bCorner3","bCorner4","bSquare","rectangle","rectangle2","corner","corner2","corner3","corner4","u","u2","u3","u4","powers","colors","selectedShape","selectedShapeColor","selectedShapePower","score","combo","rowsOrColumnsCompleted","newValue","oldValue","incrementScoreDisplay","animateHighScore","logEvent","eventType","eventData","addDoc","collection","timestamp","Date","e","console","error","increment","interval","setInterval","clearInterval","setTimeout","Math","max","getRandomShapes","saveState","addShape","checkCollision","saveHistory","shapeBlocks","i","removeShape","applyPowerEffect","completedRows","rowPositions","checkRows","completedColumns","colPositions","checkColumns","totalCompleted","rowPoints","colPoints","rowColPoints","multiBonus","comboBonus","totalPoints","showScoreAnimation","updateBoard","checkGameOver","forEach","removeRow","removeColumn","checkBoardClear","applyBombPower","applyFillBombPower","applyCrossBombPower","applyCrossFillPower","applyFillAllPower","applyRemoveRowPower","applyRemoveColumnPower","applyFillRowPower","applyFillColumnPower","undefined","map","every","parseFloat","boardRect","$refs","gameBoard","$el","dropX","dropY","floor","updateHoverCells","clearHoverCells","dataTransfer","getData","findIndex","random","now","addPowerHoverCells","addCells","rowStart","rowEnd","colStart","colEnd","flatMap","r","c","JSON","parse","stringify","state","localStorage","setItem","previousState","pop","grid","customShape","custom","toString","isRow","anim","size","transition","opacity","mounted","page","savedGameState","getItem","keys","GameBoard","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}