{"version":3,"file":"js/app.8a0ee258.js","mappings":"qJACEA,EAAAA,EAAAA,IAAaC,E,wBCANC,MAAM,c,GAGFA,MAAM,kB,GAMgCA,MAAM,c,GAVzDC,IAAA,EAgB6BD,MAAM,qB,yLAf/BE,EAAAA,EAAAA,IAmCM,MAnCNC,EAmCM,cAlCFC,EAAAA,EAAAA,IAAuC,OAAlCJ,MAAM,SAAQ,kBAAc,KACjCK,EAAAA,EAAAA,IAA6GC,EAAA,CAAhGC,UAAWC,EAAAD,UAAYE,aAAcD,EAAAC,aAAeC,oBAAqBF,EAAAE,qB,4DACtFN,EAAAA,EAAAA,IAQM,MARNO,EAQM,EAPFN,EAAAA,EAAAA,IACsBO,EAAA,CADXC,MAAOL,EAAAK,MAAQC,WAAYN,EAAAM,WAAaC,WAAUC,EAAAC,eAAiBC,OAAMC,EAAAC,WAChFC,IAAI,a,oEAERnB,EAAAA,EAAAA,IAGMoB,EAAAA,GAAA,MAXlBC,EAAAA,EAAAA,IAQqCf,EAAAgB,iBAAbC,K,WAAZvB,EAAAA,EAAAA,IAGM,OAHqCD,IAAKwB,EAAUC,GAAI1B,MAAM,kBAC/D2B,OATjBC,EAAAA,EAAAA,IASwBT,EAAAU,kBAAkBJ,K,EAT1CK,EAAAA,EAAAA,IASsD,MACrCC,EAAAA,EAAAA,IAAGN,EAAUO,QAAS,IAAC,gBAAA5B,EAAAA,EAAAA,IAAI,iCAV5C0B,EAAAA,EAAAA,QAU6C1B,EAAAA,EAAAA,IAAoD,OAApD6B,GAAoDF,EAAAA,EAAAA,IAAxBN,EAAUS,MAAI,U,SAG/E7B,EAAAA,EAAAA,IAC4E8B,EAAA,CAD3DC,OAAQ5B,EAAA4B,OAASC,cAAe7B,EAAA6B,cAAgBC,eAAcnB,EAAAoB,mBAC1EC,eAAcrB,EAAAsB,mBAAqBC,eAAcvB,EAAAwB,oB,sFAE3CnC,EAAAoC,WAAQ,WAAnB1C,EAAAA,EAAAA,IAIM,MAJN2C,EAIM,cAHFzC,EAAAA,EAAAA,IAA+C,OAA1CJ,MAAM,qBAAoB,cAAU,KACzCI,EAAAA,EAAAA,IAAmE,UAA1D0C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAA8B,YAAA9B,EAAA8B,cAAAD,IAAYhD,MAAM,kBAAiB,WACCQ,EAAA0C,QAAQC,OAAS,IAAH,WAAlEjD,EAAAA,EAAAA,IAAqF,UAnBjGD,IAAA,EAmBqB6C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAiC,UAAAjC,EAAAiC,YAAAJ,IAAUhD,MAAM,eAAwC,UAnBpFqD,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,OAsB4D7C,EAAA0C,QAAQC,OAAS,IAAH,WAAlEjD,EAAAA,EAAAA,IAAqF,UAtB7FD,IAAA,EAsBiB6C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAiC,UAAAjC,EAAAiC,YAAAJ,IAAUhD,MAAM,eAAwC,UAtBhFqD,EAAAA,EAAAA,IAAA,QAuBQjD,EAAAA,EAAAA,IAAqG,UAA5F0C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAmC,wBAAAnC,EAAAmC,0BAAAN,IAAwBhD,MAAM,uBAAsB,6BACpEI,EAAAA,EAAAA,IAA0F,UAAjF0C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAoC,kBAAApC,EAAAoC,oBAAAP,IAAkBhD,MAAM,6BAA4B,iBAAa,aACjFI,EAAAA,EAAAA,IAKI,KALDoD,KAAK,6CAA6CC,OAAO,SAASC,IAAI,sBAAsB1D,MAAM,gB,EACjGI,EAAAA,EAAAA,IAEM,OAFDuD,OAAO,KAAK,cAAY,OAAOC,QAAQ,YAAYC,QAAQ,MAAMC,MAAM,KAAK,sBAAoB,OAAO9D,MAAM,e,EAC9GI,EAAAA,EAAAA,IAA6jC,QAAvjC2D,EAAE,mjCA3BxBjC,EAAAA,EAAAA,IA4BkB,sBAEV,KAEAzB,EAAAA,EAAAA,IACwC2D,EAAA,CADnBC,QAASzD,EAAA0D,4BAA8BC,OAAMhD,EAAAiD,sBAC7DC,SAAQlD,EAAAmD,yB,yCACbjE,EAAAA,EAAAA,IACwEkE,EAAA,CADzDN,QAASzD,EAAAgE,sBAAwBpC,OAAQ5B,EAAA4B,OAASqC,sBAAuBjE,EAAAkE,eACnFP,OAAMhD,EAAAwD,uBAAyBN,SAAQlD,EAAAyD,0B,2IClC7C5E,MAAM,e,GACJA,MAAM,c,0CADbE,EAAAA,EAAAA,IAGM,MAHNC,EAGM,EAFJC,EAAAA,EAAAA,IAAyD,MAAzDO,EAAwB,gBAAYoB,EAAAA,EAAAA,IAAG8C,EAAAtE,WAAS,IAChDH,EAAAA,EAAAA,IAAuF,OAAlFJ,OAHT8E,EAAAA,EAAAA,IAAA,CAGe,QAAO,CAAAC,UAAsBF,EAAAnE,yB,QAA0BmE,EAAApE,cAAY,I,CAKlF,OACEuE,KAAM,aACNC,MAAO,CACL1E,UAAW,CACT2E,KAAMC,OACNC,UAAU,GAEZ3E,aAAc,CACZyE,KAAMC,OACNC,UAAU,GAEZ1E,oBAAqB,CACnBwE,KAAMG,QACND,UAAU,K,UChBhB,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,0CCNEpF,EAAAA,EAAAA,IAOM,OAPDF,MAAM,OAAQe,WAAQgC,EAAA,KAAAA,EAAA,IAD7BwC,EAAAA,EAAAA,KAAA,IAAAvC,IACuC7B,EAAAF,gBAAAE,EAAAF,kBAAA+B,IAAc,cAAG9B,OAAI6B,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAC,YAAAD,EAAAC,cAAA4B,IAAY3B,IAAI,a,gBAC1EnB,EAAAA,EAAAA,IAKMoB,EAAAA,GAAA,MAPVC,EAAAA,EAAAA,IAE+CsD,EAAAhE,OAF/C,CAE6B2E,EAAKC,M,WAA9BvF,EAAAA,EAAAA,IAKM,OALDF,MAAM,MAAwCC,IAAG,QAAUwF,K,gBAC9DvF,EAAAA,EAAAA,IAGMoB,EAAAA,GAAA,MANZC,EAAAA,EAAAA,IAGsDiE,GAHtD,CAGgCE,EAAOC,M,WAAjCzF,EAAAA,EAAAA,IAGM,OAHDF,OAHX8E,EAAAA,EAAAA,IAAA,CAGiB,OAAM,eACaY,EAAK,aAAgBvE,EAAAyE,YAAYH,EAAUE,GAAU,UAAcxE,EAAA0E,aAAaJ,EAAUE,MADlE1F,IAAG,QAAUwF,KAAYE,IAEzEhE,OALZC,EAAAA,EAAAA,IAKmBT,EAAA2E,eAAeJ,K,8CAOlC,GACEV,KAAM,WACNC,MAAO,CACLpE,MAAO,CACLqE,KAAMa,MACNX,UAAU,GAEZtE,WAAY,CACVoE,KAAMa,MACNX,UAAU,IAGdY,QAAS,CACP/E,cAAAA,CAAegF,GACbC,KAAKC,MAAM,WAAYF,EACzB,EACA7E,UAAAA,CAAW6E,GACTC,KAAKC,MAAM,OAAQF,EACrB,EACAL,WAAAA,CAAYJ,EAAKY,GACf,OAAOF,KAAKpF,WAAWuF,MAAKC,GAAQA,EAAKd,MAAQA,GAAOc,EAAKF,MAAQA,GACvE,EACAP,YAAAA,CAAaL,EAAKY,GAIhB,OAAOF,KAAKpF,WAAWuF,MAAKC,GAAQA,EAAKd,MAAQA,GAAOc,EAAKF,MAAQA,GAAOE,EAAKC,QACnF,EACAT,cAAAA,CAAeJ,GACb,OAAc,OAAVA,EACK,CACLc,WAAY,2BAA2Bd,MAAUA,UAAcA,UAAcA,WAG1E,CAAC,CACV,IC1CJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCNO1F,MAAM,mB,oEAAXE,EAAAA,EAAAA,IAKM,MALNC,EAKM,gBAJJD,EAAAA,EAAAA,IAGMoB,EAAAA,GAAA,MALVC,EAAAA,EAAAA,IAEkCsD,EAAAxC,eAFlC,CAEiBoE,EAAOC,M,WAApBxG,EAAAA,EAAAA,IAGM,OAHwCD,IAAG,GAAKwG,EAAMzB,QAAQ0B,K,EAClErG,EAAAA,EAAAA,IACwIsG,EAAA,CADhIF,MAAO5B,EAAAzC,OAAOqE,EAAMzB,MAAQA,KAAMyB,EAAMzB,KAAO0B,MAAOA,EAAQpE,eAAcnB,EAAAoB,mBAC5EC,eAAcrB,EAAAsB,mBAAqBC,eAAcvB,EAAAwB,mBAAqBiE,MAAOH,EAAMG,MAAQC,MAAOJ,EAAMI,MAAQnF,GAAI+E,EAAM/E,I,gKCJxIxB,EAAAA,EAAAA,IAAAoB,EAAAA,GAAA,OACElB,EAAAA,EAAAA,IAYM,OAZDJ,MAAM,QACL8G,YAAS/D,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAA4F,iBAAA5F,EAAA4F,mBAAA/D,IACXgE,YAASjE,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAA8F,iBAAA9F,EAAA8F,mBAAAjE,IACXkE,UAAOnE,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAgG,eAAAhG,EAAAgG,iBAAAnE,IACToE,aAAUrE,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAkG,kBAAAlG,EAAAkG,oBAAArE,IACZsE,YAASvE,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAoG,iBAAApG,EAAAoG,mBAAAvE,IACXwE,WAAQzE,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAsG,gBAAAtG,EAAAsG,kBAAAzE,IACVrB,OARRC,EAAAA,EAAAA,IAQeT,EAAAuG,a,gBACTxH,EAAAA,EAAAA,IAGMoB,EAAAA,GAAA,MAZZC,EAAAA,EAAAA,IASiDsD,EAAA4B,OATjD,CAS+BjB,EAAKC,M,WAA9BvF,EAAAA,EAAAA,IAGM,OAHDF,MAAM,MAAwCC,IAAKwF,G,gBACpDvF,EAAAA,EAAAA,IACMoB,EAAAA,GAAA,MAXhBC,EAAAA,EAAAA,IAUwIiE,GAVxI,CAUkHE,EAAOC,M,WAA/GzF,EAAAA,EAAAA,IACM,OADDF,OAVf8E,EAAAA,EAAAA,IAAA,CAUqB,QAAO,MAAkB3D,EAAAwG,YAAYlC,EAAUE,GAAU,SAAenF,EAAAoH,cAAiD3H,IAAK0F,EAAchE,OAVjKC,EAAAA,EAAAA,IAUwKT,EAAAwG,YAAYlC,EAAUE,K,kCAV9L7D,EAAAA,EAAAA,IAaQ,KACNC,EAAAA,EAAAA,IAAG8C,EAAAgC,OAAK,O,CAKV,MAAMgB,EAAY,GAClB,OACE7C,KAAM,iBACNC,MAAO,CACLD,KAAM,CACJE,KAAM4C,OACN1C,UAAU,EACV2C,QAAS,SAEXtB,MAAO,CACLvB,KAAMa,MACNX,UAAU,GAEZsB,MAAO,CACLxB,KAAMC,OACNC,UAAU,GAEZ4C,gBAAiB,CACf9C,KAAMG,QACN0C,SAAS,GAEXnB,MAAO,CACL1B,KAAM4C,OACN1C,UAAU,GAEZyB,MAAO,CACL3B,KAAM4C,OACN1C,UAAU,EACV2C,QAAS,IAEXrG,GAAI,CACFwD,KAAM4C,OACN1C,UAAU,EACV2C,QAAS,KAGbE,IAAAA,GACE,MAAO,CACLC,WAAY,CAAC,EACbC,QAAS,EACTC,QAAS,EACTC,cAAe,EACfC,cAAe,EACfV,YAAY,EAEhB,EACAW,SAAU,CACRb,UAAAA,GACE,OAAIxB,KAAK0B,WACA,CACLY,SAAU,WACVC,KAAM,GAAGvC,KAAKmC,kBACdK,IAAK,GAAGxC,KAAKoC,kBACbK,OAAQ,KAGL,CAAC,CACV,GAEF3C,QAAS,CACP2B,WAAAA,CAAYlC,EAAUE,GACpB,GAAKO,KAAKO,MACV,OAAGP,KAAKO,MAAMhB,GAAUE,GACf,CACLa,WAAY,2BAA2BN,KAAKU,UAAUV,KAAKU,cAAcV,KAAKU,cAAcV,KAAKU,oBAFrG,CAKF,EACAG,eAAAA,CAAgBd,GACd,GAAIC,KAAK8B,gBAAiB,OAC1B,MAAMY,EAAO3C,EAAMxC,OAAOoF,wBAC1B3C,KAAKiC,QAAUlC,EAAM6C,QAAUF,EAAKH,KACpCvC,KAAKkC,QAAUnC,EAAM8C,QAAUH,EAAKF,IAEpCxC,KAAKmC,cAAgBpC,EAAM6C,QAAU5C,KAAKiC,QAC1CjC,KAAKoC,cAAgBrC,EAAM8C,QAAU7C,KAAKkC,QAAUP,EAEpD3B,KAAK0B,YAAa,EAClB1B,KAAKC,MAAM,eAAgB,CAACnB,KAAMkB,KAAKlB,KAAM4B,MAAOV,KAAKU,MAAOC,MAAOX,KAAKW,MAAOnF,GAAIwE,KAAKxE,IAC9F,EACAuF,eAAAA,CAAgBhB,GACdA,EAAM+C,iBACD9C,KAAK0B,aAAc1B,KAAK8B,kBAC7B9B,KAAKmC,cAAgBpC,EAAM6C,QAAU5C,KAAKiC,QAC1CjC,KAAKoC,cAAgBrC,EAAM8C,QAAU7C,KAAKkC,QAAUP,EACpD3B,KAAKC,MAAM,eAAgB,CAAEnB,KAAMkB,KAAKlB,KAAM8D,QAAS7C,EAAM6C,QAASC,QAAS9C,EAAM8C,QAAU7C,KAAKkC,QAAUP,EAAWM,QAASjC,KAAKiC,QAASC,QAASlC,KAAKkC,UAChK,EACAjB,aAAAA,CAAclB,GACRC,KAAK8B,kBACT9B,KAAK0B,YAAa,EAClB1B,KAAKC,MAAM,eAAgB,CAAEnB,KAAMkB,KAAKlB,KAAM8D,QAAS7C,EAAM6C,QAASC,QAAS9C,EAAM8C,QAAUlB,EAAWM,QAASjC,KAAKiC,QAASC,QAASlC,KAAKkC,UACjJ,EACAf,gBAAAA,CAAiBpB,GACf,GAAIC,KAAK8B,gBAAiB,OAC1B/B,EAAM+C,iBACN,MAAMJ,EAAO3C,EAAMxC,OAAOwF,cAAcJ,wBACxC3C,KAAKiC,QAAUlC,EAAMiD,QAAQ,GAAGJ,QAAUF,EAAKH,KAC/CvC,KAAKkC,QAAUnC,EAAMiD,QAAQ,GAAGH,QAAUH,EAAKF,IAE/CxC,KAAKmC,cAAgBpC,EAAMiD,QAAQ,GAAGJ,QAAU5C,KAAKiC,QACrDjC,KAAKoC,cAAiBrC,EAAMiD,QAAQ,GAAGH,QAAU7C,KAAKkC,QAAWP,EAEjE3B,KAAK0B,YAAa,EAClB1B,KAAKC,MAAM,eAAgB,CAACnB,KAAMkB,KAAKlB,KAAM4B,MAAOV,KAAKU,MAAOC,MAAOX,KAAKW,MAAOnF,GAAIwE,KAAKxE,IAC9F,EACA6F,eAAAA,CAAgBtB,GACd,GAAIC,KAAK8B,gBAAiB,OAC1B,MAAMmB,EAAQlD,EAAMiD,QAAQ,GAC5BhD,KAAKmC,cAAgBc,EAAML,QAAU5C,KAAKiC,QAC1CjC,KAAKoC,cAAiBa,EAAMJ,QAAU7C,KAAKkC,QAAWP,EACtD3B,KAAKC,MAAM,eAAgB,CAAEnB,KAAMkB,KAAKlB,KAAM8D,QAASK,EAAML,QAASC,QAAUI,EAAMJ,QAAU7C,KAAKkC,QAAWP,EAAWM,QAASjC,KAAKiC,QAASC,QAASlC,KAAKkC,SAClK,EACAX,cAAAA,CAAexB,GACb,GAAIC,KAAK8B,gBAAiB,OAC1B9B,KAAK0B,YAAa,EAClB,MAAMuB,EAAQlD,EAAMmD,eAAe,GACnClD,KAAKC,MAAM,eAAgB,CAAEnB,KAAMkB,KAAKlB,KAAM8D,QAASK,EAAML,QAASC,QAASI,EAAMJ,QAAWlB,EAAYM,QAASjC,KAAKiC,QAASC,QAASlC,KAAKkC,SACnJ,ICnIJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QFKA,GACEpD,KAAM,iBACNqE,WAAY,CAAEC,MAAKA,GACnBrE,MAAO,CACL7C,OAAQ,CACN8C,KAAMqE,OACNnE,UAAU,GAEZ/C,cAAe,CACb6C,KAAMa,MACNX,UAAU,IAGdY,QAAS,CACPzD,kBAAAA,CAAmB0D,GACjBC,KAAKC,MAAM,eAAgBF,EAC7B,EACAxD,kBAAAA,CAAmBwD,GACjBC,KAAKC,MAAM,eAAgBF,EAC7B,EACAtD,kBAAAA,CAAmBsD,GACjBC,KAAKC,MAAM,eAAgBF,EAC7B,IG7BJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCPAhG,IAAA,EACOD,MAAM,wB,GACJA,MAAM,gC,GAEJA,MAAM,qB,EAJjB,Y,GAYWA,MAAM,yB,EAZjB,a,+BAC0C6E,EAAAZ,UAAO,WAA/C/D,EAAAA,EAAAA,IAiBM,MAjBNC,EAiBM,EAhBJC,EAAAA,EAAAA,IAeM,MAfNO,EAeM,cAdJP,EAAAA,EAAAA,IAAiC,UAA7B,4BAAwB,KAC5BA,EAAAA,EAAAA,IAOM,MAPN6B,EAOM,gBANJ/B,EAAAA,EAAAA,IAKMoB,EAAAA,GAAA,MAVdC,EAAAA,EAAAA,IAKgEf,EAAAgJ,OALhE,CAK8ChE,EAAKC,M,WAA3CvF,EAAAA,EAAAA,IAKM,OALDF,MAAM,mBAAqDC,IAAKwF,G,gBACnEvF,EAAAA,EAAAA,IAGMoB,EAAAA,GAAA,MAThBC,EAAAA,EAAAA,IAMqEiE,GANrE,CAMiDc,EAAMmD,M,WAA7CvJ,EAAAA,EAAAA,IAGM,OAHDF,OANf8E,EAAAA,EAAAA,IAAA,CAMqB,oBAAmB,QACLwB,KADwCrG,IAAKwJ,EAEhE3G,QAAK4G,GAAEvI,EAAAwI,WAAWlE,EAAUgE,I,QAR5C5G,M,oBAYMzC,EAAAA,EAAAA,IAGM,MAHNwJ,EAGM,EAFJxJ,EAAAA,EAAAA,IAA+F,UAAvFJ,MAAM,sBAAuB8C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAA0I,WAAA1I,EAAA0I,aAAA7G,IAAY8G,SAAU3I,EAAA4I,WAAa,GAAG,OAAI,EAb9FC,IAcQ5J,EAAAA,EAAAA,IAAmE,UAA3DJ,MAAM,sBAAuB8C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAA8I,QAAA9I,EAAA8I,UAAAjH,KAAQ,aAEtD5C,EAAAA,EAAAA,IAAmC,SAAhC,YAAQ2B,EAAAA,EAAAA,IAAGZ,EAAA4I,YAAa,OAAI,SAhBrC1G,EAAAA,EAAAA,IAAA,M,CAuBA,OACE2B,KAAM,qBACNC,MAAO,CACLhB,QAAS,CACPiB,KAAMG,QACND,UAAU,IAGd6C,IAAAA,GACE,MAAO,CACLuB,MAAOzD,MAAMmE,KAAK,CAAE/G,OAAQ,IAAK,IAAM4C,MAAM,GAAGoE,KAAK,KAEzD,EACA5B,SAAU,CACRwB,UAAAA,GACE,OAAO7D,KAAKsD,MAAMY,OAAOC,QAAO/D,GAAiB,IAATA,IAAYnD,MACtD,GAEF6C,QAAS,CACP2D,UAAAA,CAAWnE,EAAKY,GACe,IAAzBF,KAAKsD,MAAMhE,GAAKY,GAClBF,KAAKsD,MAAMhE,GAAKY,GAAO,EACdF,KAAK6D,WAAa,IAC3B7D,KAAKsD,MAAMhE,GAAKY,GAAO,EAE3B,EACAyD,SAAAA,GACE3D,KAAKC,MAAM,OAAQD,KAAKsD,MAC1B,EACAS,MAAAA,GACE/D,KAAKC,MAAM,SACb,ICjDJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCPAlG,IAAA,EACOD,MAAM,yB,GACJA,MAAM,yB,GACJA,MAAM,sB,EAHjB,Y,GAcWA,MAAM,0B,yDAb0B6E,EAAAZ,UAAO,WAAhD/D,EAAAA,EAAAA,IAkBM,MAlBNC,EAkBM,EAjBJC,EAAAA,EAAAA,IAgBM,MAhBNO,EAgBM,EAfJP,EAAAA,EAAAA,IAUM,MAVN6B,EAUM,gBATJ/B,EAAAA,EAAAA,IAQMoB,EAAAA,GAAA,MAZdC,EAAAA,EAAAA,IAMuCsD,EAAAzC,QANvC,CAMkBqE,EAAO6D,M,WAFjBpK,EAAAA,EAAAA,IAQM,OAPJF,OALV8E,EAAAA,EAAAA,IAAA,CAKgB,qBAAoB,CAAAyF,SAGN/J,EAAAkE,eAAe8F,SAASF,MAD3CrK,IAAKqK,EAELxH,QAAK4G,GAAEvI,EAAAsJ,qBAAqBH,I,EAE7BjK,EAAAA,EAAAA,IAAkEsG,EAAA,CAA1DF,MAAOA,EAAQzB,KAAMsF,EAAYtC,iBAAiB,G,6BAXpEnF,M,SAcMzC,EAAAA,EAAAA,IAGM,MAHNwJ,EAGM,EAFJxJ,EAAAA,EAAAA,IAAyE,UAAjEJ,MAAM,uBAAwB8C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAuJ,eAAAvJ,EAAAuJ,iBAAA1H,KAAe,SAC5D5C,EAAAA,EAAAA,IAA6E,UAArEJ,MAAM,uBAAwB8C,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAE7B,EAAAwJ,iBAAAxJ,EAAAwJ,mBAAA3H,KAAiB,kBAhBtEK,EAAAA,EAAAA,IAAA,M,CAyBA,OACE2B,KAAM,eACNqE,WAAY,CAAEC,MAAKA,GACnBrE,MAAO,CACLhB,QAAS,CACPiB,KAAMG,QACND,UAAU,GAEZhD,OAAQ,CACN8C,KAAMqE,OACNnE,UAAU,GAEZX,sBAAuB,CACrBS,KAAMa,MACNX,UAAU,IAGd6C,IAAAA,GACE,MAAO,CACLvD,eAAgB,GAEpB,EACAkG,MAAO,CACLnG,sBAAuB,CACrBoG,WAAW,EACXC,OAAAA,CAAQC,GACN7E,KAAKxB,eAAiB,IAAIqG,EAC5B,IAGJ/E,QAAS,CACPyE,oBAAAA,CAAqBH,GACnB,MAAM5D,EAAQR,KAAKxB,eAAesG,QAAQV,GACtC5D,GAAS,EACXR,KAAKxB,eAAeuG,OAAOvE,EAAO,GAElCR,KAAKxB,eAAewG,KAAKZ,EAE7B,EACAI,aAAAA,GACExE,KAAKC,MAAM,OAAQD,KAAKxB,eAC1B,EACAiG,eAAAA,GACEzE,KAAKC,MAAM,SACb,IC9DJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QZsCA,GACIkD,WAAY,CAAE8B,mBAAkB,EAAEC,SAAQ,EAAEC,WAAU,EAAEC,eAAc,EAAEC,aAAYA,GACpFvG,KAAM,YACNiD,IAAAA,GACI,MAAO,CACHpH,MAAOkF,MAAMmE,KAAK,CAAE/G,OAAQ,IAAK,IAAM4C,MAAM,GAAGoE,KAAK,QACrD/H,OAAQ,CACJoJ,OAAQ,CACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,KAAM,CACF,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,MAAO,CACH,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,GACD,CAAC,IAELC,MAAO,CACH,CAAC,EAAG,EAAG,IAEXC,MAAO,CACH,CAAC,EAAG,IAERC,MAAO,CACH,CAAC,GACD,CAAC,GACD,CAAC,IAELC,MAAO,CACH,CAAC,GACD,CAAC,IAELC,EAAG,CACC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,GAAI,CACA,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,GAAI,CACA,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,GAAI,CACA,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,OAAQ,CACJ,CAAC,IAELC,EAAG,CACC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,GAAI,CACA,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,GAAI,CACA,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,GAAI,CACA,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,GAAI,CACA,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAG,CACC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,EAAG,CACC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAG,CACC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,QAAS,CACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAU,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAU,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAU,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,QAAS,CACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,UAAW,CACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,WAAY,CACR,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,OAAQ,CACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,QAAS,CACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,QAAS,CACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,QAAS,CACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,EAAG,CACC,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,GAAI,CACA,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,GAAI,CACA,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,GAAI,CACA,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAIZC,OAAQ,CAAC,OAAQ,YAAa,aAAc,gBAAiB,WAAY,cAAe,aAAa,aAAc,YAEnHC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEvL,cAAe,GACfwL,cAAe,CACX7I,KAAM,GACN4B,MAAO,GACPC,MAAO,GACPnF,GAAI,IAERoM,mBAAoB,GACpBC,mBAAoB,GACpBnL,UAAU,EACVoL,MAAO,EACPvN,aAAc,EACdF,UAAW,EACXG,qBAAqB,EACrBI,WAAY,GACZoC,QAAS,GACTgB,6BAA6B,EAC7BM,uBAAuB,EACvBE,eAAgB,GAChBuJ,MAAO,EACPC,wBAAwB,EACxB1M,gBAAiB,GAEzB,EACAoJ,MAAO,CACHoD,KAAAA,CAAMG,EAAUC,GACZlI,KAAKmI,sBAAsBF,EAAUC,GACjCD,EAAWjI,KAAK3F,WAChB2F,KAAKoI,kBAEb,GAEJtI,QAAS,CACLqI,qBAAAA,CAAsBF,EAAUC,GAC5B,GAAID,EAAWC,EAAU,CACrB,IAAIG,EAAY,EACZJ,EAAWC,EAAW,GACtBG,EAAY,GACLJ,EAAWC,EAAW,KAC7BG,EAAY,GAEhB,MAAMC,EAAWC,aAAY,KACzBvI,KAAKzF,cAAgB8N,EACjBrI,KAAKzF,cAAgByF,KAAK8H,QAC1B9H,KAAKzF,aAAeyF,KAAK8H,MACzBU,cAAcF,GAClB,GACD,EACP,MACItI,KAAKzF,aAAeyF,KAAK8H,KAEjC,EACAM,gBAAAA,GACIpI,KAAKxF,qBAAsB,EAC3BiO,YAAW,KACPzI,KAAKxF,qBAAsB,CAAK,GACjC,IACP,EACAuC,UAAAA,GACIiD,KAAKrF,MAAQkF,MAAMmE,KAAK,CAAE/G,OAAQ,IAAK,IAAM4C,MAAM,GAAGoE,KAAK,QAC3DjE,KAAKtD,UAAW,EAChBsD,KAAK3F,UAAYqO,KAAKC,IAAI3I,KAAK8H,MAAO9H,KAAK3F,WAC3C2F,KAAK8H,MAAQ,EACb9H,KAAK+H,MAAQ,EACb/H,KAAKgI,wBAAyB,EAC9BhI,KAAKhD,QAAU,GACfgD,KAAK4I,kBACL5I,KAAK6I,WACT,EACAC,QAAAA,CAASvI,EAAOjB,EAAKY,GACjB,GAAIF,KAAK+I,eAAexI,EAAOjB,EAAKY,GAAM,OAC1CF,KAAKgJ,cAEL,IAAIC,EAAc,EAClB,IAAK,IAAIC,EAAI,EAAGA,EAAI3I,EAAMtD,OAAQiM,IAC9B,IAAK,IAAI3C,EAAI,EAAGA,EAAIhG,EAAM2I,GAAGjM,OAAQsJ,IACb,IAAhBhG,EAAM2I,GAAG3C,KACTvG,KAAKrF,MAAM2E,EAAM4J,GAAGhJ,EAAMqG,GAAKvG,KAAK2H,cAAcjH,MAClDuI,KAIZjJ,KAAK8H,OAASmB,EACdjJ,KAAKmJ,YAAYnJ,KAAK2H,eAElB3H,KAAK2H,cAAchH,OACnBX,KAAKoJ,iBAAiBpJ,KAAK2H,cAAchH,MAAOrB,EAAKY,GAGzD,IAAI,cAAEmJ,EAAa,aAAEC,GAAiBtJ,KAAKuJ,aACvC,iBAAEC,EAAgB,aAAEC,GAAiBzJ,KAAK0J,eAC1CC,EAAiBN,EAAgBG,EAErC,GAAIG,EAAiB,EAAG,CACpB3J,KAAK+H,QACL,MAAM6B,EAA4B,GAAhBP,EACZQ,EAA+B,GAAnBL,EACZM,EAAgC,GAAjBH,EACfI,EAAaJ,EAAiB,EAAqB,GAAjBA,EAAsB,EACxDK,EAA0B,GAAbhK,KAAK+H,MAClBkC,EAAcH,EAAeC,EAAaC,EAEhDhK,KAAK8H,OAASmC,EACdjK,KAAKgI,wBAAyB,EAG1BqB,EAAgB,IACZU,EAAaC,EAAa,EAC1BhK,KAAKkK,mBAAmBH,EAAaC,EAAYV,EAAa,GAAI,GAAG,EAAM,SAE3EtJ,KAAKkK,mBAAmBN,EAAWN,EAAa,GAAI,GAAG,EAAM,SAKjEE,EAAmB,IACfO,EAAaC,EAAa,EAC1BhK,KAAKkK,mBAAmBH,EAAaC,EAAY,EAAGP,EAAa,IAAI,EAAO,SAE5EzJ,KAAKkK,mBAAmBL,EAAW,EAAGJ,EAAa,IAAI,EAAO,QAI1E,CAEAzJ,KAAKmK,YAAYb,EAAcG,GAIG,IAA9BzJ,KAAK7D,cAAcc,SACd+C,KAAKgI,yBACNhI,KAAK+H,MAAQ,GAGjBU,YAAW,KACPzI,KAAK4I,iBAAiB,GACvB,MAGPH,YAAW,KAEPzI,KAAKtD,SAAWsD,KAAKoK,gBACrBpK,KAAK6I,WAAW,GACjB,IAEP,EACAsB,WAAAA,CAAYb,EAAcG,GACtBH,EAAae,SAAQ/K,IACjBU,KAAKsK,UAAUhL,EAAI,IAEvBmK,EAAaY,SAAQnK,IACjBF,KAAKuK,aAAarK,EAAI,IAG1BuI,YAAW,KACHzI,KAAKwK,oBACLxK,KAAK8H,OAAS,IACd9H,KAAKkK,mBAAmB,IAAK,EAAG,GAAG,EAAM,SAC7C,GACD,IAEP,EACAd,gBAAAA,CAAiBzI,EAAOrB,EAAKY,GACzB,OAAQS,GACJ,IAAK,OACDX,KAAKyK,eAAenL,EAAKY,GACzB,MACJ,IAAK,YACDF,KAAK0K,mBAAmBpL,EAAKY,GAC7B,MACJ,IAAK,aACDF,KAAK2K,oBAAoBrL,EAAKY,GAC9B,MACJ,IAAK,aACDF,KAAK4K,oBAAoBtL,EAAKY,GAC9B,MACJ,IAAK,WACDF,KAAK6K,oBACL,MACJ,IAAK,aACD7K,KAAK8K,oBAAoBxL,GACzB,MACJ,IAAK,gBACDU,KAAK+K,uBAAuB7K,GAC5B,MACJ,IAAK,WACDF,KAAKgL,kBAAkB1L,GACvB,MACJ,IAAK,cACDU,KAAKiL,qBAAqB/K,GAC1B,MAEZ,EACAuK,cAAAA,CAAenL,EAAKY,GAChB,IAAK,IAAIgJ,EAAI5J,EAAM,EAAG4J,GAAK5J,EAAM,EAAG4J,IAChC,IAAK,IAAI3C,EAAIrG,EAAM,EAAGqG,GAAKrG,EAAM,EAAGqG,IAC5BvG,KAAKrF,MAAMuO,SAA2BgC,IAArBlL,KAAKrF,MAAMuO,GAAG3C,KAC/BvG,KAAKrF,MAAMuO,GAAG3C,GAAK,KAInC,EACAoE,mBAAAA,CAAoBrL,EAAKY,GACrB,IAAK,IAAIgJ,EAAI,EAAGA,EAAIlJ,KAAKrF,MAAMsC,OAAQiM,IACnClJ,KAAKrF,MAAMuO,GAAGhJ,GAAO,KAEzB,IAAK,IAAIqG,EAAI,EAAGA,EAAIvG,KAAKrF,MAAM,GAAGsC,OAAQsJ,IACtCvG,KAAKrF,MAAM2E,GAAKiH,GAAK,IAE7B,EACAsE,iBAAAA,GACI7K,KAAKrF,MAAQqF,KAAKrF,MAAMwQ,KAAI7L,GAAOA,EAAI6L,KAAI/K,GAAkB,OAATA,EAAgBJ,KAAK2H,cAAcjH,MAAQN,KACnG,EACAwK,mBAAAA,CAAoBtL,EAAKY,GACrB,IAAK,IAAIgJ,EAAI,EAAGA,EAAIlJ,KAAKrF,MAAMsC,OAAQiM,IACR,OAAvBlJ,KAAKrF,MAAMuO,GAAGhJ,KACdF,KAAKrF,MAAMuO,GAAGhJ,GAAOF,KAAK2H,cAAcjH,OAGhD,IAAK,IAAI6F,EAAI,EAAGA,EAAIvG,KAAKrF,MAAM,GAAGsC,OAAQsJ,IACX,OAAvBvG,KAAKrF,MAAM2E,GAAKiH,KAChBvG,KAAKrF,MAAM2E,GAAKiH,GAAKvG,KAAK2H,cAAcjH,MAGpD,EACAgK,kBAAAA,CAAmBpL,EAAKY,GACpB,IAAK,IAAIgJ,EAAI5J,EAAM,EAAG4J,GAAK5J,EAAM,EAAG4J,IAChC,IAAK,IAAI3C,EAAIrG,EAAM,EAAGqG,GAAKrG,EAAM,EAAGqG,IAC5BvG,KAAKrF,MAAMuO,SAA2BgC,IAArBlL,KAAKrF,MAAMuO,GAAG3C,IACN,OAArBvG,KAAKrF,MAAMuO,GAAG3C,KACdvG,KAAKrF,MAAMuO,GAAG3C,GAAKvG,KAAK2H,cAAcjH,MAK1D,EACAoK,mBAAAA,CAAoBxL,GAChBU,KAAKsK,UAAUhL,EACnB,EACA0L,iBAAAA,CAAkB1L,GACdU,KAAKrF,MAAM2E,GAAOU,KAAKrF,MAAM2E,GAAK6L,KAAI/K,GAAkB,OAATA,EAAgBJ,KAAK2H,cAAcjH,MAAQN,GAC9F,EACA6K,oBAAAA,CAAqB/K,GACjBF,KAAKrF,MAAM0P,SAAQ/K,GAAOA,EAAIY,GAAoB,OAAbZ,EAAIY,GAAgBF,KAAK2H,cAAcjH,MAAQpB,EAAIY,IAC5F,EACA6K,sBAAAA,CAAuB7K,GACnBF,KAAKuK,aAAarK,EACtB,EACAsK,eAAAA,GACI,OAAOxK,KAAKrF,MAAMyQ,OAAM9L,GAAOA,EAAI8L,OAAM5L,GAAmB,OAAVA,KACtD,EACAuJ,cAAAA,CAAexI,EAAOjB,EAAKY,GACvB,IAAK,IAAIgJ,EAAI,EAAGA,EAAI3I,EAAMtD,OAAQiM,IAC9B,IAAK,IAAI3C,EAAI,EAAGA,EAAIhG,EAAM2I,GAAGjM,OAAQsJ,IACjC,GAAoB,IAAhBhG,EAAM2I,GAAG3C,UACmB2E,IAAxBlL,KAAKrF,MAAM2E,EAAM4J,SAAqDgC,IAAjClL,KAAKrF,MAAM2E,EAAM4J,GAAGhJ,EAAMqG,IAAqD,OAAjCvG,KAAKrF,MAAM2E,EAAM4J,GAAGhJ,EAAMqG,IAC7G,OAAO,EAKvB,OAAO,CACX,EACAgD,SAAAA,GACI,IAAID,EAAe,GACnB,IAAK,IAAIJ,EAAI,EAAGA,EAAIlJ,KAAKrF,MAAMsC,OAAQiM,IAC/BlJ,KAAKrF,MAAMuO,GAAGkC,OAAM5L,GAAmB,OAAVA,KAC7B8J,EAAatE,KAAKkE,GAG1B,MAAO,CAAEG,cAAeC,EAAarM,OAAQqM,eACjD,EACAgB,SAAAA,CAAUhL,GACNU,KAAKrF,MAAM2E,GAAK+K,SAAQ,CAAC7K,EAAOgB,KAC5BiI,YAAW,KACPzI,KAAKrF,MAAM2E,GAAKyF,OAAOvE,EAAO,EAAG,KAAK,GAC/B,GAARA,EAAW,GAEtB,EACAkJ,YAAAA,GACI,IAAID,EAAe,GACnB,IAAK,IAAIP,EAAI,EAAGA,EAAIlJ,KAAKrF,MAAM,GAAGsC,OAAQiM,IAClClJ,KAAKrF,MAAMyQ,OAAM9L,GAAkB,OAAXA,EAAI4J,MAC5BO,EAAazE,KAAKkE,GAG1B,MAAO,CAAEM,iBAAkBC,EAAaxM,OAAQwM,eACpD,EACAc,YAAAA,CAAarK,GACTF,KAAKrF,MAAM0P,SAAQ,CAAC/K,EAAKkB,KACrBiI,YAAW,KACPzI,KAAKrF,MAAM6F,GAAOuE,OAAO7E,EAAK,EAAG,KAAK,GAC/B,GAARM,EAAW,GAEtB,EACA4J,aAAAA,GAEI,IAAK,IAAI7J,KAASP,KAAK7D,cACnB,IAAK,IAAImD,EAAM,EAAGA,GAAOU,KAAKrF,MAAMsC,OAAS+C,KAAK9D,OAAOqE,EAAMzB,MAAM7B,OAAQqC,IACzE,IAAK,IAAIY,EAAM,EAAGA,GAAOF,KAAKrF,MAAM,GAAGsC,OAAS+C,KAAK9D,OAAOqE,EAAMzB,MAAM,GAAG7B,OAAQiD,IAC/E,IAAKF,KAAK+I,eAAe/I,KAAK9D,OAAOqE,EAAMzB,MAAOQ,EAAKY,GACnD,OAAO,EAKvB,OAAO,CACX,EACA7D,kBAAAA,CAAmB0D,GACfC,KAAK2H,cAAgB,CAAE7I,KAAMiB,EAAMjB,KAAM4B,MAAOX,EAAMW,MAAOC,MAAOZ,EAAMY,MAAOnF,GAAIuE,EAAMvE,GAC/F,EACAe,kBAAAA,CAAmBwD,GACf,MAAMkC,EAAUoJ,WAAWtL,EAAMkC,SAC3BC,EAAUmJ,WAAWtL,EAAMmC,SAC3BoJ,EAAYtL,KAAKuL,MAAMC,UAAUC,IAAI9I,wBACrC+I,EAAQ3L,EAAM6C,QAAU0I,EAAU/I,KAAON,EACzC0J,EAAQ5L,EAAM8C,QAAUyI,EAAU9I,IAAMN,EACxC5C,EAAMoJ,KAAKkD,MAAMD,EAAQ,IACzBzL,EAAMwI,KAAKkD,MAAMF,EAAQ,IAE/B1L,KAAK6L,iBAAiB7L,KAAK9D,OAAO8D,KAAK2H,cAAc7I,MAAOQ,EAAKY,EACrE,EACAzD,kBAAAA,CAAmBsD,GACf,MAAMkC,EAAUoJ,WAAWtL,EAAMkC,SAC3BC,EAAUmJ,WAAWtL,EAAMmC,SAC3BoJ,EAAYtL,KAAKuL,MAAMC,UAAUC,IAAI9I,wBACrC+I,EAAQ3L,EAAM6C,QAAU0I,EAAU/I,KAAON,EACzC0J,EAAQ5L,EAAM8C,QAAUyI,EAAU9I,IAAMN,EACxC5C,EAAMoJ,KAAKkD,MAAMD,EAAQ,IACzBzL,EAAMwI,KAAKkD,MAAMF,EAAQ,IAE/B1L,KAAK8I,SAAS9I,KAAK9D,OAAO8D,KAAK2H,cAAc7I,MAAOQ,EAAKY,GACzDF,KAAK8L,iBACT,EACA5Q,UAAAA,CAAW6E,GACP,MAAMjB,EAAOiB,EAAMgM,aAAaC,QAAQ,QACxC,IAAKlN,EAAM,OACX,MAAMmD,EAAUoJ,WAAWtL,EAAMgM,aAAaC,QAAQ,YAChD9J,EAAUmJ,WAAWtL,EAAMgM,aAAaC,QAAQ,YAChDV,EAAYtL,KAAKuL,MAAMC,UAAUC,IAAI9I,wBACrC+I,EAAQ3L,EAAM6C,QAAU0I,EAAU/I,KAAON,EACzC0J,EAAQ5L,EAAM8C,QAAUyI,EAAU9I,IAAMN,EACxC5C,EAAMoJ,KAAKkD,MAAMD,EAAQ,IACzBzL,EAAMwI,KAAKkD,MAAMF,EAAQ,IAC/B1L,KAAK8I,SAAS9I,KAAK9D,OAAO4C,GAAOQ,EAAKY,GACtCF,KAAK8L,iBACT,EACA3C,WAAAA,CAAY5I,GACR,MAAMC,EAAQR,KAAK7D,cAAc8P,WAAUzF,GAAKA,EAAEhL,KAAO+E,EAAM/E,KAC3DgF,GAAS,GACTR,KAAK7D,cAAc4I,OAAOvE,EAAO,EAEzC,EACAoI,eAAAA,GAEI5I,KAAK7D,cAAgB0D,MAAMmE,KAAK,CAAE/G,OAAQ,IAAK,KAC3C,MAAMmH,EAAYpE,KAAKxB,eAAekK,KAAKkD,MAAMlD,KAAKwD,SAAWlM,KAAKxB,eAAevB,SACrF,MAAO,CAAE6B,KAAMsF,EAAW5I,GAAI2Q,KAAKC,MAAQ1D,KAAKwD,SAAU,IAG9DlM,KAAK7D,cAAckO,SAAQ9J,IACvBA,EAAMG,MAAQV,KAAK0H,OAAOgB,KAAKkD,MAAMlD,KAAKwD,SAAWlM,KAAK0H,OAAOzK,QAAQ,IAG7E+C,KAAK7D,cAAckO,SAAQ9J,IACJ,WAAfA,EAAMzB,OACNyB,EAAMI,MAAQX,KAAKyH,OAAOiB,KAAKkD,MAAMlD,KAAKwD,SAAWlM,KAAKyH,OAAOxK,SACrE,IAEA+C,KAAKoK,iBACLpK,KAAK4I,kBAGT5I,KAAKgI,wBAAyB,CAClC,EACApI,cAAAA,CAAeJ,GACX,OAAc,OAAVA,EACO,CACHc,WAAY,2BAA2Bd,MAAUA,UAAcA,UAAcA,WAG9E,CAAC,CACZ,EACAqM,gBAAAA,CAAiBtL,EAAOjB,EAAKY,GAEzB,GADAF,KAAKpF,WAAa,IACdoF,KAAK+I,eAAexI,EAAOjB,EAAKY,GAApC,CAEA,IAAK,IAAIgJ,EAAI,EAAGA,EAAI3I,EAAMtD,OAAQiM,IAC9B,IAAK,IAAI3C,EAAI,EAAGA,EAAIhG,EAAM2I,GAAGjM,OAAQsJ,IACb,IAAhBhG,EAAM2I,GAAG3C,IACTvG,KAAKpF,WAAWoK,KAAK,CAAE1F,IAAKA,EAAM4J,EAAGhJ,IAAKA,EAAMqG,IAMxDvG,KAAK2H,cAAchH,OACnBX,KAAKqM,mBAAmB/M,EAAKY,EAAKF,KAAK2H,cAAchH,MAZT,CAcpD,EACA0L,kBAAAA,CAAmB/M,EAAKY,EAAKS,GACzB,MAAM2L,EAAWA,CAACC,EAAUC,EAAQC,EAAUC,EAAQrM,KAClD,IAAK,IAAI6I,EAAIqD,EAAUrD,GAAKsD,EAAQtD,IAChC,IAAK,IAAI3C,EAAIkG,EAAUlG,GAAKmG,EAAQnG,IAC5BvG,KAAKrF,MAAMuO,SAA2BgC,IAArBlL,KAAKrF,MAAMuO,GAAG3C,IAC/BvG,KAAKpF,WAAWoK,KAAK,CAAE1F,IAAK4J,EAAGhJ,IAAKqG,EAAGlG,UAGnD,EAGJ,OAAQM,GACJ,IAAK,OACD2L,EAAShN,EAAM,EAAGA,EAAM,EAAGY,EAAM,EAAGA,EAAM,GAAG,GAC7C,MACJ,IAAK,aACDoM,EAAS,EAAGtM,KAAKrF,MAAMsC,OAAS,EAAGiD,EAAKA,GAAK,GAC7CoM,EAAShN,EAAKA,EAAK,EAAGU,KAAKrF,MAAM,GAAGsC,OAAS,GAAG,GAChD,MACJ,IAAK,aACDqP,EAAS,EAAGtM,KAAKrF,MAAMsC,OAAS,EAAGiD,EAAKA,GAAK,GAC7CoM,EAAShN,EAAKA,EAAK,EAAGU,KAAKrF,MAAM,GAAGsC,OAAS,GAAG,GAChD,MACJ,IAAK,WACD+C,KAAKpF,WAAaoF,KAAKrF,MAAMgS,SAAQ,CAACC,EAAG1D,IAAM0D,EAAEzB,KAAI,CAAC0B,EAAGtG,KAAM,CAAGjH,IAAK4J,EAAGhJ,IAAKqG,EAAGlG,QAAQ,QAC1F,MACJ,IAAK,aACDiM,EAAShN,EAAKA,EAAK,EAAGU,KAAKrF,MAAM,GAAGsC,OAAS,GAAG,GAChD,MACJ,IAAK,gBACDqP,EAAS,EAAGtM,KAAKrF,MAAMsC,OAAS,EAAGiD,EAAKA,GAAK,GAC7C,MACJ,IAAK,WACDoM,EAAShN,EAAKA,EAAK,EAAGU,KAAKrF,MAAM,GAAGsC,OAAS,GAAG,GAChD,MACJ,IAAK,cACDqP,EAAS,EAAGtM,KAAKrF,MAAMsC,OAAS,EAAGiD,EAAKA,GAAK,GAC7C,MACJ,IAAK,YACDoM,EAAShN,EAAM,EAAGA,EAAM,EAAGY,EAAM,EAAGA,EAAM,GAAG,GAC7C,MACJ,QACI,MAEZ,EACA4L,eAAAA,GACI9L,KAAKpF,WAAa,EACtB,EACAoO,WAAAA,GACIhJ,KAAKhD,QAAQgI,KAAK,CACdrK,MAAOmS,KAAKC,MAAMD,KAAKE,UAAUhN,KAAKrF,QACtCmN,MAAO9H,KAAK8H,MACZC,MAAO/H,KAAK+H,MACZC,uBAAwBhI,KAAKgI,uBAC7B7L,cAAe2Q,KAAKC,MAAMD,KAAKE,UAAUhN,KAAK7D,iBAEtD,EACA0M,SAAAA,GAEI,MAAMoE,EAAQ,CACVtS,MAAOmS,KAAKC,MAAMD,KAAKE,UAAUhN,KAAKrF,QACtCmN,MAAO9H,KAAK8H,MACZ3L,cAAe2Q,KAAKC,MAAMD,KAAKE,UAAUhN,KAAK7D,gBAC9CwL,cAAe3H,KAAK2H,cACpB3K,QAAS8P,KAAKC,MAAMD,KAAKE,UAAUhN,KAAKhD,UACxCwB,eAAgBwB,KAAKxB,eACrBnE,UAAW2F,KAAK3F,UAChB0N,MAAO/H,KAAK+H,MACZC,uBAAwBhI,KAAKgI,wBAEjCkF,aAAaC,QAAQ,YAAaL,KAAKE,UAAUC,GACrD,EACA/P,QAAAA,GACI,GAAI8C,KAAKhD,QAAQC,OAAS,EAAG,CACzB,MAAMmQ,EAAgBpN,KAAKhD,QAAQqQ,MACnCrN,KAAKrF,MAAQyS,EAAczS,MAC3BqF,KAAK8H,MAAQsF,EAActF,MAC3B9H,KAAK7D,cAAgBiR,EAAcjR,cACnC6D,KAAKtD,UAAW,EAChBsD,KAAK+H,MAAQqF,EAAcrF,MAC3B/H,KAAKgI,uBAAyBoF,EAAcpF,sBAChD,CACJ,EACA5K,sBAAAA,GACI4C,KAAKhC,6BAA8B,CACvC,EACAE,qBAAAA,CAAsBoP,GAClBtN,KAAKhC,6BAA8B,EACnC,MAAMuP,EAAcD,EAAKnC,KAAI7L,GAAOA,EAAI6L,KAAI/K,GAASA,EAAO,EAAI,MAChEJ,KAAK9D,OAAOsR,OAASD,EACrBvN,KAAK7D,cAAc6I,KAAK,CAAElG,KAAM,SAAU4B,MAAO,IAAMgI,KAAKkD,MAAsB,SAAhBlD,KAAKwD,UAAqBuB,SAAS,MACrGzN,KAAK6I,WACT,EACAzK,uBAAAA,GACI4B,KAAKhC,6BAA8B,CACvC,EACAX,gBAAAA,GACI2C,KAAK1B,uBAAwB,CACjC,EACAG,sBAAAA,CAAuBD,GACnBwB,KAAK1B,uBAAwB,EAC7B0B,KAAKxB,eAAiBA,EACtBwB,KAAK4I,kBACL5I,KAAK6I,WACT,EACAnK,wBAAAA,GACIsB,KAAK1B,uBAAwB,CACjC,EACA4L,kBAAAA,CAAmBpO,EAAQwD,EAAKY,EAAKwN,EAAO1R,GACxC,MAAMT,EAAY,CACdO,SACAwD,MACAY,MACAwN,QACA1R,OACAR,GAAI2Q,KAAKC,OAEbpM,KAAK1E,gBAAgB0J,KAAKzJ,GAC1BkN,YAAW,KACPzI,KAAK1E,gBAAkB0E,KAAK1E,gBAAgB6I,QAAOwJ,GAAQA,EAAKnS,KAAOD,EAAUC,IAAG,GACrF,IACP,EACAG,iBAAAA,CAAkBJ,GACd,MAAMqS,EAAO,GACPpL,EAAMjH,EAAUmS,MAAUnS,EAAU+D,IAAOsO,EAAe,EAAPA,EACnDrL,EAAOhH,EAAUmS,MAAe,EAAPE,GAAarS,EAAU2E,IAAM,GAAK0N,EACjE,MAAO,CACHpL,IAAK,GAAGA,MACRD,KAAM,GAAGA,MACTsL,WAAY,+BACZC,QAAS,EAEjB,GAEJC,OAAAA,GAEI,MAAMC,EAAiBd,aAAae,QAAQ,aAC5C,GAAID,EAAgB,CAChB,MAAMf,EAAQH,KAAKC,MAAMiB,GACzBhO,KAAKrF,MAAQsS,EAAMtS,MACnBqF,KAAK8H,MAAQmF,EAAMnF,MACnB9H,KAAK7D,cAAgB8Q,EAAM9Q,cAC3B6D,KAAK2H,cAAgBsF,EAAMtF,cAC3B3H,KAAKhD,QAAUiQ,EAAMjQ,QACrBgD,KAAKxB,eAAiByO,EAAMzO,eAC5BwB,KAAK3F,UAAY4S,EAAM5S,UACvB2F,KAAK+H,MAAQkF,EAAMlF,MACnB/H,KAAKgI,uBAAyBiF,EAAMjF,sBACxC,MACIhI,KAAKxB,eAAiB6E,OAAO6K,KAAKlO,KAAK9D,QACvC8D,KAAKjD,YAGb,GazvBJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,SdAA,IACE+B,KAAM,MACNqE,WAAY,CACVgL,UAASA,KeHb,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAASC,KAEpE,WCNAC,EAAAA,EAAAA,IAAUC,IAAKC,MAAM,O,GCFjBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBxD,IAAjByD,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAStG,EAAI,EAAGA,EAAI+F,EAAShS,OAAQiM,IAAK,CACrCkG,EAAWH,EAAS/F,GAAG,GACvBmG,EAAKJ,EAAS/F,GAAG,GACjBoG,EAAWL,EAAS/F,GAAG,GAE3B,IAJA,IAGIuG,GAAY,EACPlJ,EAAI,EAAGA,EAAI6I,EAASnS,OAAQsJ,MACpB,EAAX+I,GAAsBC,GAAgBD,IAAajM,OAAO6K,KAAKO,EAAoBS,GAAG9D,OAAM,SAASrR,GAAO,OAAO0U,EAAoBS,EAAEnV,GAAKqV,EAAS7I,GAAK,IAChK6I,EAASrK,OAAOwB,IAAK,IAErBkJ,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASlK,OAAOmE,IAAK,GACrB,IAAI0D,EAAIyC,SACEnE,IAAN0B,IAAiBuC,EAASvC,EAC/B,CACD,CACA,OAAOuC,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIpG,EAAI+F,EAAShS,OAAQiM,EAAI,GAAK+F,EAAS/F,EAAI,GAAG,GAAKoG,EAAUpG,IAAK+F,EAAS/F,GAAK+F,EAAS/F,EAAI,GACrG+F,EAAS/F,GAAK,CAACkG,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoBiB,EAAI,SAASb,GAChC,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,WAAa,OAAOf,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAJ,EAAoB5Q,EAAE8R,EAAQ,CAAEE,EAAGF,IAC5BA,CACR,C,eCNAlB,EAAoB5Q,EAAI,SAAS+Q,EAASkB,GACzC,IAAI,IAAI/V,KAAO+V,EACXrB,EAAoBsB,EAAED,EAAY/V,KAAS0U,EAAoBsB,EAAEnB,EAAS7U,IAC5EsJ,OAAO2M,eAAepB,EAAS7U,EAAK,CAAEkW,YAAY,EAAMC,IAAKJ,EAAW/V,IAG3E,C,eCPA0U,EAAoB0B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOpQ,MAAQ,IAAIqQ,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB9B,EAAoBsB,EAAI,SAASS,EAAKC,GAAQ,OAAOpN,OAAOqN,UAAUC,eAAe5B,KAAKyB,EAAKC,EAAO,C,eCKtG,IAAIG,EAAkB,CACrB,IAAK,GAaNnC,EAAoBS,EAAE3I,EAAI,SAASsK,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BhP,GAC/D,IAKI2M,EAAUmC,EALVzB,EAAWrN,EAAK,GAChBiP,EAAcjP,EAAK,GACnBkP,EAAUlP,EAAK,GAGImH,EAAI,EAC3B,GAAGkG,EAASjP,MAAK,SAAS3E,GAAM,OAA+B,IAAxBoV,EAAgBpV,EAAW,IAAI,CACrE,IAAIkT,KAAYsC,EACZvC,EAAoBsB,EAAEiB,EAAatC,KACrCD,EAAoBO,EAAEN,GAAYsC,EAAYtC,IAGhD,GAAGuC,EAAS,IAAI9B,EAAS8B,EAAQxC,EAClC,CAEA,IADGsC,GAA4BA,EAA2BhP,GACrDmH,EAAIkG,EAASnS,OAAQiM,IACzB2H,EAAUzB,EAASlG,GAChBuF,EAAoBsB,EAAEa,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOpC,EAAoBS,EAAEC,EAC9B,EAEI+B,EAAqBC,KAAK,4BAA8BA,KAAK,6BAA+B,GAChGD,EAAmB7G,QAAQyG,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBlM,KAAO8L,EAAqBM,KAAK,KAAMF,EAAmBlM,KAAKoM,KAAKF,G,IC/CvF,IAAIG,EAAsB5C,EAAoBS,OAAEhE,EAAW,CAAC,MAAM,WAAa,OAAOuD,EAAoB,KAAO,IACjH4C,EAAsB5C,EAAoBS,EAAEmC,E","sources":["webpack://power-blocks/./src/App.vue","webpack://power-blocks/./src/components/GameBoard.vue","webpack://power-blocks/./src/components/ScoreBoard.vue","webpack://power-blocks/./src/components/ScoreBoard.vue?b1f1","webpack://power-blocks/./src/components/GameGrid.vue","webpack://power-blocks/./src/components/GameGrid.vue?a4c6","webpack://power-blocks/./src/components/ShapeSelection.vue","webpack://power-blocks/./src/components/Block.vue","webpack://power-blocks/./src/components/Block.vue?92b4","webpack://power-blocks/./src/components/ShapeSelection.vue?b619","webpack://power-blocks/./src/components/CustomPieceCreator.vue","webpack://power-blocks/./src/components/CustomPieceCreator.vue?1be7","webpack://power-blocks/./src/components/SelectShapes.vue","webpack://power-blocks/./src/components/SelectShapes.vue?0d3b","webpack://power-blocks/./src/components/GameBoard.vue?b7d7","webpack://power-blocks/./src/App.vue?7ccd","webpack://power-blocks/./src/main.js","webpack://power-blocks/webpack/bootstrap","webpack://power-blocks/webpack/runtime/chunk loaded","webpack://power-blocks/webpack/runtime/compat get default export","webpack://power-blocks/webpack/runtime/define property getters","webpack://power-blocks/webpack/runtime/global","webpack://power-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://power-blocks/webpack/runtime/jsonp chunk loading","webpack://power-blocks/webpack/startup"],"sourcesContent":["<template>\n  <GameBoard />\n</template>\n\n<script>\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #fff;\n}\n</style>\n","<template>\n    <div class=\"game-board\">\n        <div class=\"title\">Power Blocks!!</div>\n        <ScoreBoard :highScore=\"highScore\" :scoreDisplay=\"scoreDisplay\" :isHighScoreAnimated=\"isHighScoreAnimated\" />\n        <div class=\"grid-container\">\n            <GameGrid :board=\"board\" :hoverCells=\"hoverCells\" @dragover=\"handleDragOver\" @drop=\"handleDrop\"\n                ref=\"gameBoard\" />\n            <!-- Score animations -->\n            <div v-for=\"animation in scoreAnimations\" :key=\"animation.id\" class=\"score-animation\"\n                :style=\"getAnimationStyle(animation)\">\n                +{{ animation.points }} <br> <span class=\"score-text\">{{ animation.text }}</span>\n            </div>\n        </div>\n        <ShapeSelection :shapes=\"shapes\" :currentShapes=\"currentShapes\" @shapeClicked=\"handleShapeClicked\"\n            @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" />\n\n        <div v-if=\"gameOver\" class=\"game-over-overlay\">\n            <div class=\"game-over-message\">Game Over!</div>\n            <button @click=\"resetBoard\" class=\"restart-button\">Restart</button>\n            <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        </div>\n\n        <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        <button @click=\"openCustomPieceCreator\" class=\"create-piece-button\">Create Your Custom Piece</button>\n        <button @click=\"openSelectShapes\" class=\"open-select-shapes-button\">Select Shapes</button>\n        <a href=\"https://github.com/leonardoad/power-blocks\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"github-badge\">\n            <svg height=\"15\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" version=\"1.1\" width=\"32\" data-view-component=\"true\" class=\"github-icon\">\n                <path d=\"M12 1C5.9225 1 1 5.9225 1 12C1 16.8675 4.14875 20.9787 8.52125 22.4362C9.07125 22.5325 9.2775 22.2025 9.2775 21.9137C9.2775 21.6525 9.26375 20.7862 9.26375 19.865C6.5 20.3737 5.785 19.1912 5.565 18.5725C5.44125 18.2562 4.905 17.28 4.4375 17.0187C4.0525 16.8125 3.5025 16.3037 4.42375 16.29C5.29 16.2762 5.90875 17.0875 6.115 17.4175C7.105 19.0812 8.68625 18.6137 9.31875 18.325C9.415 17.61 9.70375 17.1287 10.02 16.8537C7.5725 16.5787 5.015 15.63 5.015 11.4225C5.015 10.2262 5.44125 9.23625 6.1425 8.46625C6.0325 8.19125 5.6475 7.06375 6.2525 5.55125C6.2525 5.55125 7.17375 5.2625 9.2775 6.67875C10.1575 6.43125 11.0925 6.3075 12.0275 6.3075C12.9625 6.3075 13.8975 6.43125 14.7775 6.67875C16.8813 5.24875 17.8025 5.55125 17.8025 5.55125C18.4075 7.06375 18.0225 8.19125 17.9125 8.46625C18.6138 9.23625 19.04 10.2125 19.04 11.4225C19.04 15.6437 16.4688 16.5787 14.0213 16.8537C14.42 17.1975 14.7638 17.8575 14.7638 18.8887C14.7638 20.36 14.75 21.5425 14.75 21.9137C14.75 22.2025 14.9563 22.5462 15.5063 22.4362C19.8513 20.9787 23 16.8537 23 12C23 5.9225 18.0775 1 12 1Z\"></path>\n            </svg>\n            View on GitHub\n        </a>\n\n        <CustomPieceCreator :visible=\"isCustomPieceCreatorVisible\" @save=\"handleCustomPieceSave\"\n            @cancel=\"handleCustomPieceCancel\" />\n        <SelectShapes :visible=\"isSelectShapesVisible\" :shapes=\"shapes\" :initialSelectedShapes=\"selectedShapes\"\n            @save=\"handleSelectShapesSave\" @cancel=\"handleSelectShapesCancel\" />\n    </div>\n</template>\n\n<script>\nimport ScoreBoard from './ScoreBoard.vue';\nimport GameGrid from './GameGrid.vue';\nimport ShapeSelection from './ShapeSelection.vue';\nimport CustomPieceCreator from './CustomPieceCreator.vue';\nimport SelectShapes from './SelectShapes.vue';\n\nimport './GameBoard.css';\nexport default {\n    components: { CustomPieceCreator, GameGrid, ScoreBoard, ShapeSelection, SelectShapes },\n    name: 'GameBoard',\n    data() {\n        return {\n            board: Array.from({ length: 8 }, () => Array(8).fill(null)),\n            shapes: {\n                square: [\n                    [1, 1],\n                    [1, 1]\n                ],\n                line: [\n                    [1, 1, 1, 1, 1]\n                ],\n                line2: [\n                    [1],\n                    [1],\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line3: [\n                    [1, 1, 1]\n                ],\n                line4: [\n                    [1, 1]\n                ],\n                line5: [\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line6: [\n                    [1],\n                    [1]\n                ],\n                t: [\n                    [1, 1, 1],\n                    [0, 1, 0]\n                ],\n                t2: [\n                    [1, 0],\n                    [1, 1],\n                    [1, 0]\n                ],\n                t3: [\n                    [0, 1, 0],\n                    [1, 1, 1]\n                ],\n                t4: [\n                    [0, 1],\n                    [1, 1],\n                    [0, 1]\n                ],\n                single: [\n                    [1]\n                ],\n                l: [\n                    [1, 0],\n                    [1, 0],\n                    [1, 1]\n                ],\n                l2: [\n                    [1, 1],\n                    [0, 1],\n                    [0, 1]\n                ],\n                l3: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 0]\n                ],\n                l4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                ],\n                l5: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                ],\n                j: [\n                    [0, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                s: [\n                    [0, 1, 1],\n                    [1, 1, 0]\n                ],\n                z: [\n                    [1, 1, 0],\n                    [0, 1, 1]\n                ],\n                bCorner: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                    [1, 0, 0]\n                ],\n                bCorner2: [\n                    [0, 0, 1],\n                    [0, 0, 1],\n                    [1, 1, 1]\n                ],\n                bCorner3: [\n                    [1, 0, 0],\n                    [1, 0, 0],\n                    [1, 1, 1]\n                ],\n                bCorner4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                    [0, 0, 1]\n                ],\n                bSquare: [\n                    [1, 1, 1],\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle: [\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle2: [\n                    [1, 1],\n                    [1, 1],\n                    [1, 1]\n                ],\n                corner: [\n                    [1, 1],\n                    [0, 1]\n                ],\n                corner2: [\n                    [1, 0],\n                    [1, 1]\n                ],\n                corner3: [\n                    [0, 1],\n                    [1, 1]\n                ],\n                corner4: [\n                    [1, 1],\n                    [1, 0]\n                ],\n                u: [\n                    [1, 0, 1],\n                    [1, 1, 1]\n                ],\n                u2: [\n                    [1, 1, 1],\n                    [1, 0, 1]\n                ],\n                u3: [\n                    [1, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                u4: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 1]\n                ],\n\n            },\n            powers: ['bomb', 'fill-bomb', 'remove-row', 'remove-column', 'fill-row', 'fill-column', 'cross-bomb','cross-fill', 'fill-all'],\n            // powers: ['fill-all', 'fill-bomb', 'fill-row', 'fill-column', 'cross-fill'],\n            colors: ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF'],\n            currentShapes: [],\n            selectedShape: {\n                name: '',\n                color: '',\n                power: '',\n                id: ''\n            },\n            selectedShapeColor: '',\n            selectedShapePower: '',\n            gameOver: false,\n            score: 0,\n            scoreDisplay: 0,\n            highScore: 0,\n            isHighScoreAnimated: false,\n            hoverCells: [],\n            history: [], // Add history array\n            isCustomPieceCreatorVisible: false, // Add visibility state for custom piece creator\n            isSelectShapesVisible: false, // Add visibility state for select shapes\n            selectedShapes: [], // Add selected shapes array\n            combo: 0, // Add combo counter\n            rowsOrColumnsCompleted: false, // Track if any rows/columns were completed in the current round\n            scoreAnimations: [], // Track score animations\n        };\n    },\n    watch: {\n        score(newValue, oldValue) {\n            this.incrementScoreDisplay(newValue, oldValue);\n            if (newValue > this.highScore) {\n                this.animateHighScore();\n            }\n        }\n    },\n    methods: {\n        incrementScoreDisplay(newValue, oldValue) {\n            if (newValue > oldValue) {\n                let increment = 1;\n                if (newValue - oldValue > 50) {\n                    increment = 10;\n                } else if (newValue - oldValue > 10) {\n                    increment = 5;\n                }\n                const interval = setInterval(() => {\n                    this.scoreDisplay += increment;\n                    if (this.scoreDisplay >= this.score) {\n                        this.scoreDisplay = this.score;\n                        clearInterval(interval);\n                    }\n                }, 1);\n            } else {\n                this.scoreDisplay = this.score;\n            }\n        },\n        animateHighScore() {\n            this.isHighScoreAnimated = true;\n            setTimeout(() => {\n                this.isHighScoreAnimated = false;\n            }, 1000); // Duration of the animation\n        },\n        resetBoard() {\n            this.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n            this.gameOver = false;\n            this.highScore = Math.max(this.score, this.highScore);\n            this.score = 0;\n            this.combo = 0;\n            this.rowsOrColumnsCompleted = false;\n            this.history = []; // Clear history on reset\n            this.getRandomShapes();\n            this.saveState();\n        },\n        addShape(shape, row, col) {\n            if (this.checkCollision(shape, row, col)) return;\n            this.saveHistory();\n\n            let shapeBlocks = 0;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.board[row + i][col + j] = this.selectedShape.color;\n                        shapeBlocks++;\n                    }\n                }\n            }\n            this.score += shapeBlocks; // Points for placing the shape\n            this.removeShape(this.selectedShape);\n\n            if (this.selectedShape.power) {\n                this.applyPowerEffect(this.selectedShape.power, row, col);\n            }\n\n            let { completedRows, rowPositions } = this.checkRows();\n            let { completedColumns, colPositions } = this.checkColumns();\n            let totalCompleted = completedRows + completedColumns;\n\n            if (totalCompleted > 0) {\n                this.combo++;\n                const rowPoints = completedRows * 10; // Points for completed rows/columns\n                const colPoints = completedColumns * 10; // Points for completed columns\n                const rowColPoints = totalCompleted * 10; // Points for completed rows/columns\n                const multiBonus = totalCompleted > 1 ? totalCompleted * 10 : 0; // Bonus for multiple rows/columns\n                const comboBonus = this.combo * 10; // Combo bonus\n                const totalPoints = rowColPoints + multiBonus + comboBonus;\n\n                this.score += totalPoints;\n                this.rowsOrColumnsCompleted = true; // Mark that rows/columns were completed\n\n                // Show score animations for completed rows\n                if (completedRows > 0) {\n                    if (multiBonus + comboBonus > 0) {\n                        this.showScoreAnimation(multiBonus + comboBonus, rowPositions[0], 0, true, \"Combo\");\n                    } else {\n                        this.showScoreAnimation(rowPoints, rowPositions[0], 0, true, \"Good\");\n                    }\n                }\n\n                // Show score animations for completed columns\n                if (completedColumns > 0) {\n                    if (multiBonus + comboBonus > 0) {\n                        this.showScoreAnimation(multiBonus + comboBonus, 0, colPositions[0], false, \"Combo\");\n                    } else {\n                        this.showScoreAnimation(colPoints, 0, colPositions[0], false, \"Good\");\n                    }\n                }\n\n            }\n            \n            this.updateBoard(rowPositions, colPositions);\n\n\n            \n            if (this.currentShapes.length === 0) {\n                if (!this.rowsOrColumnsCompleted) {\n                    this.combo = 0; // Reset combo if no rows/columns were completed in the last play of the round\n                }\n                \n                setTimeout(() => {\n                    this.getRandomShapes();\n                }, 600); // Delay to allow the animations to complete\n\n            }\n            setTimeout(() => {\n\n                this.gameOver = this.checkGameOver();\n                this.saveState(); // Save the current state after adding the shape\n            }, 1000); // Delay to allow the animations to complete\n\n        },\n        updateBoard(rowPositions, colPositions) {\n            rowPositions.forEach(row => {\n                this.removeRow(row);\n            });\n            colPositions.forEach(col => {\n                this.removeColumn(col);\n            });\n            \n            setTimeout(() => {\n                if (this.checkBoardClear()) {\n                    this.score += 300; // Bonus for clearing the board \n                    this.showScoreAnimation(300, 4, 4, true, \"Clear\");\n                }\n            }, 500); // Delay to allow the animations to complete\n            \n        },\n        applyPowerEffect(power, row, col) {\n            switch (power) {\n                case 'bomb':\n                    this.applyBombPower(row, col);\n                    break;\n                case 'fill-bomb':\n                    this.applyFillBombPower(row, col);\n                    break;\n                case 'cross-bomb':\n                    this.applyCrossBombPower(row, col);\n                    break;\n                case 'cross-fill':\n                    this.applyCrossFillPower(row, col);\n                    break;\n                case 'fill-all':\n                    this.applyFillAllPower();\n                    break;\n                case 'remove-row':\n                    this.applyRemoveRowPower(row);\n                    break;\n                case 'remove-column':\n                    this.applyRemoveColumnPower(col);\n                    break;\n                case 'fill-row':\n                    this.applyFillRowPower(row);\n                    break;\n                case 'fill-column':\n                    this.applyFillColumnPower(col);\n                    break;\n            }\n        },\n        applyBombPower(row, col) {\n            for (let i = row - 1; i <= row + 1; i++) {\n                for (let j = col - 1; j <= col + 1; j++) {\n                    if (this.board[i] && this.board[i][j] !== undefined) {\n                        this.board[i][j] = null;\n                    }\n                }\n            }\n        },\n        applyCrossBombPower(row, col) {\n            for (let i = 0; i < this.board.length; i++) {\n                this.board[i][col] = null;\n            }\n            for (let j = 0; j < this.board[0].length; j++) {\n                this.board[row][j] = null;\n            }\n        },\n        applyFillAllPower() {\n            this.board = this.board.map(row => row.map(cell => (cell === null ? this.selectedShape.color : cell)));\n        },\n        applyCrossFillPower(row, col) {\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i][col] === null) {\n                    this.board[i][col] = this.selectedShape.color;\n                }\n            }\n            for (let j = 0; j < this.board[0].length; j++) {\n                if (this.board[row][j] === null) {\n                    this.board[row][j] = this.selectedShape.color;\n                }\n            }\n        },\n        applyFillBombPower(row, col) {\n            for (let i = row - 1; i <= row + 1; i++) {\n                for (let j = col - 1; j <= col + 1; j++) {\n                    if (this.board[i] && this.board[i][j] !== undefined) {\n                        if (this.board[i][j] === null) {\n                            this.board[i][j] = this.selectedShape.color;\n                        }\n                    }\n                }\n            }\n        },\n        applyRemoveRowPower(row) {\n            this.removeRow(row);\n        },\n        applyFillRowPower(row) {\n            this.board[row] = this.board[row].map(cell => (cell === null ? this.selectedShape.color : cell));\n        },\n        applyFillColumnPower(col) {\n            this.board.forEach(row => row[col] = row[col] === null ? this.selectedShape.color : row[col]);\n        },\n        applyRemoveColumnPower(col) {\n            this.removeColumn(col);\n        },\n        checkBoardClear() {\n            return this.board.every(row => row.every(block => block === null));\n        },\n        checkCollision(shape, row, col) {\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        if (this.board[row + i] === undefined || this.board[row + i][col + j] === undefined || this.board[row + i][col + j] !== null) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        },\n        checkRows() {\n            let rowPositions = [];\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i].every(block => block !== null)) {\n                    rowPositions.push(i);\n                }\n            }\n            return { completedRows: rowPositions.length, rowPositions };\n        },\n        removeRow(row) {\n            this.board[row].forEach((block, index) => {\n                setTimeout(() => {\n                    this.board[row].splice(index, 1, null);\n                }, index * 10);\n            });\n        },\n        checkColumns() {\n            let colPositions = [];\n            for (let i = 0; i < this.board[0].length; i++) {\n                if (this.board.every(row => row[i] !== null)) {\n                    colPositions.push(i);\n                }\n            }\n            return { completedColumns: colPositions.length, colPositions };\n        },\n        removeColumn(col) {\n            this.board.forEach((row, index) => {\n                setTimeout(() => {\n                    this.board[index].splice(col, 1, null);\n                }, index * 10);\n            });\n        },\n        checkGameOver() {\n            //the game is over when there is no space available for the next shape\n            for (let shape of this.currentShapes) {\n                for (let row = 0; row <= this.board.length - this.shapes[shape.name].length; row++) {\n                    for (let col = 0; col <= this.board[0].length - this.shapes[shape.name][0].length; col++) {\n                        if (!this.checkCollision(this.shapes[shape.name], row, col)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        handleShapeClicked(event) {\n            this.selectedShape = { name: event.name, color: event.color, power: event.power, id: event.id }; // store shape details\n        },\n        handleShapeDragged(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.updateHoverCells(this.shapes[this.selectedShape.name], row, col);\n        },\n        handleShapeDropped(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.addShape(this.shapes[this.selectedShape.name], row, col);\n            this.clearHoverCells();\n        },\n        handleDrop(event) {\n            const name = event.dataTransfer.getData('name');\n            if (!name) return;\n            const offsetX = parseFloat(event.dataTransfer.getData('offsetX'));\n            const offsetY = parseFloat(event.dataTransfer.getData('offsetY'));\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n            this.addShape(this.shapes[name], row, col);\n            this.clearHoverCells();\n        },\n        removeShape(shape) {\n            const index = this.currentShapes.findIndex(s => s.id === shape.id);\n            if (index > -1) {\n                this.currentShapes.splice(index, 1);\n            }\n        },\n        getRandomShapes() {\n            //select 3 random shapes from the shapes object and add to the currentShapes array the shapes can be repeated\n            this.currentShapes = Array.from({ length: 3 }, () => {\n                const shapeName = this.selectedShapes[Math.floor(Math.random() * this.selectedShapes.length)];\n                return { name: shapeName, id: Date.now() + Math.random() };\n            });\n\n            this.currentShapes.forEach(shape => {\n                shape.color = this.colors[Math.floor(Math.random() * this.colors.length)];\n            });\n\n            this.currentShapes.forEach(shape => {\n                if (shape.name === 'single') {\n                    shape.power = this.powers[Math.floor(Math.random() * this.powers.length)];\n                }\n            });\n            if (this.checkGameOver()) {\n                this.getRandomShapes();\n            }\n\n            this.rowsOrColumnsCompleted = false; // Reset for the new round\n        },\n        applyCellStyle(block) {\n            if (block !== null) {\n                return {\n                    background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n                };\n            }\n            return {};\n        },\n        updateHoverCells(shape, row, col) {\n            this.hoverCells = [];\n            if (this.checkCollision(shape, row, col)) return;\n\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.hoverCells.push({ row: row + i, col: col + j });\n                    }\n                }\n            }\n\n            // Add special shadows for power blocks\n            if (this.selectedShape.power) {\n                this.addPowerHoverCells(row, col, this.selectedShape.power);\n            }\n        },\n        addPowerHoverCells(row, col, power) {\n            const addCells = (rowStart, rowEnd, colStart, colEnd, remove) => {\n                for (let i = rowStart; i <= rowEnd; i++) {\n                    for (let j = colStart; j <= colEnd; j++) {\n                        if (this.board[i] && this.board[i][j] !== undefined) {\n                            this.hoverCells.push({ row: i, col: j, remove });\n                        }\n                    }\n                }\n            };\n\n            switch (power) {\n                case 'bomb':\n                    addCells(row - 1, row + 1, col - 1, col + 1, true);\n                    break;\n                case 'cross-bomb':\n                    addCells(0, this.board.length - 1, col, col, true);\n                    addCells(row, row, 0, this.board[0].length - 1, true);\n                    break;\n                case 'cross-fill':\n                    addCells(0, this.board.length - 1, col, col, false);\n                    addCells(row, row, 0, this.board[0].length - 1, false);\n                    break;\n                case 'fill-all':\n                    this.hoverCells = this.board.flatMap((r, i) => r.map((c, j) => ({ row: i, col: j, remove: false })));\n                    break;\n                case 'remove-row':\n                    addCells(row, row, 0, this.board[0].length - 1, true);\n                    break;\n                case 'remove-column':\n                    addCells(0, this.board.length - 1, col, col, true);\n                    break;\n                case 'fill-row':\n                    addCells(row, row, 0, this.board[0].length - 1, false);\n                    break;\n                case 'fill-column':\n                    addCells(0, this.board.length - 1, col, col, false);\n                    break;\n                case 'fill-bomb':\n                    addCells(row - 1, row + 1, col - 1, col + 1, false);\n                    break;\n                default:\n                    break;\n            }\n        },\n        clearHoverCells() {\n            this.hoverCells = [];\n        },\n        saveHistory() {\n            this.history.push({\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes))\n            });\n        },\n        saveState() {\n            // Save the current state of the board and the score\n            const state = {\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes)),\n                selectedShape: this.selectedShape,\n                history: JSON.parse(JSON.stringify(this.history)),\n                selectedShapes: this.selectedShapes,\n                highScore: this.highScore,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted\n            };\n            localStorage.setItem('gameState', JSON.stringify(state));\n        },\n        undoMove() {\n            if (this.history.length > 0) {\n                const previousState = this.history.pop();\n                this.board = previousState.board;\n                this.score = previousState.score;\n                this.currentShapes = previousState.currentShapes;\n                this.gameOver = false;\n                this.combo = previousState.combo;\n                this.rowsOrColumnsCompleted = previousState.rowsOrColumnsCompleted;\n            }\n        },\n        openCustomPieceCreator() {\n            this.isCustomPieceCreatorVisible = true;\n        },\n        handleCustomPieceSave(grid) {\n            this.isCustomPieceCreatorVisible = false;\n            const customShape = grid.map(row => row.map(cell => (cell ? 1 : 0)));\n            this.shapes.custom = customShape;\n            this.currentShapes.push({ name: 'custom', color: '#' + Math.floor(Math.random() * 16777215).toString(16) });\n            this.saveState();\n        },\n        handleCustomPieceCancel() {\n            this.isCustomPieceCreatorVisible = false;\n        },\n        openSelectShapes() {\n            this.isSelectShapesVisible = true;\n        },\n        handleSelectShapesSave(selectedShapes) {\n            this.isSelectShapesVisible = false;\n            this.selectedShapes = selectedShapes;\n            this.getRandomShapes();\n            this.saveState();\n        },\n        handleSelectShapesCancel() {\n            this.isSelectShapesVisible = false;\n        },\n        showScoreAnimation(points, row, col, isRow, text) {\n            const animation = {\n                points,\n                row,\n                col,\n                isRow,\n                text,\n                id: Date.now() // Unique ID for each animation\n            };\n            this.scoreAnimations.push(animation);\n            setTimeout(() => {\n                this.scoreAnimations = this.scoreAnimations.filter(anim => anim.id !== animation.id);\n            }, 2000); // Duration of the animation\n        },\n        getAnimationStyle(animation) {\n            const size = 40; // Assuming each cell is 40x40 pixels\n            const top = animation.isRow ? ((animation.row) * size) : size * 4;\n            const left = animation.isRow ? size * 4 : ((animation.col + 1) * size);\n            return {\n                top: `${top}px`,\n                left: `${left}px`,\n                transition: 'transform 0.5s, opacity 0.5s',\n                opacity: 1,\n            };\n        },\n    },\n    mounted() {\n\n        const savedGameState = localStorage.getItem('gameState');\n        if (savedGameState) {\n            const state = JSON.parse(savedGameState);\n            this.board = state.board;\n            this.score = state.score;\n            this.currentShapes = state.currentShapes;\n            this.selectedShape = state.selectedShape;\n            this.history = state.history;\n            this.selectedShapes = state.selectedShapes;\n            this.highScore = state.highScore;\n            this.combo = state.combo;\n            this.rowsOrColumnsCompleted = state.rowsOrColumnsCompleted;\n        } else {\n            this.selectedShapes = Object.keys(this.shapes);\n            this.resetBoard();\n        }\n\n    }\n}\n</script>\n","<template>\n  <div class=\"score-board\">\n    <div class=\"high-score\">High Score: {{ highScore }}</div>\n    <div class=\"score\" :class=\"{ highlight: isHighScoreAnimated }\">{{ scoreDisplay }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ScoreBoard',\n  props: {\n    highScore: {\n      type: Number,\n      required: true\n    },\n    scoreDisplay: {\n      type: Number,\n      required: true\n    },\n    isHighScoreAnimated: {\n      type: Boolean,\n      required: true\n    }\n  }\n};\n</script>\n ","import { render } from \"./ScoreBoard.vue?vue&type=template&id=e55e7eee\"\nimport script from \"./ScoreBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid\" @dragover.prevent=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\">\n    <div class=\"row\" v-for=\"(row, rowIndex) in board\" :key=\"`grid-${rowIndex}`\">\n      <div class=\"cell\" v-for=\"(block, blockIndex) in row\" :key=\"`cell-${rowIndex}-${blockIndex}`\"\n           :class=\"{ 'filled-cell': block, 'hover-cell': isHoverCell(rowIndex, blockIndex), 'hover-x': isRemoveCell(rowIndex, blockIndex) }\"\n           :style=\"applyCellStyle(block)\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameGrid',\n  props: {\n    board: {\n      type: Array,\n      required: true\n    },\n    hoverCells: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleDragOver(event) {\n      this.$emit('dragover', event);\n    },\n    handleDrop(event) {\n      this.$emit('drop', event);\n    },\n    isHoverCell(row, col) {\n      return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n    },\n    isRemoveCell(row, col) {\n      // Check if the cell is marked for removal\n      // This assumes that hoverCells can contain both hover and remove states\n      // the HoverCells array should have a property to distinguish between hover and remove\n      return this.hoverCells.some(cell => cell.row === row && cell.col === col && cell.remove);\n    },\n    applyCellStyle(block) {\n      if (block !== null) {\n        return {\n          background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n        };\n      }\n      return {};\n    }\n  }\n};\n</script>\n","import { render } from \"./GameGrid.vue?vue&type=template&id=7d89574c\"\nimport script from \"./GameGrid.vue?vue&type=script&lang=js\"\nexport * from \"./GameGrid.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"shape-selection\">\n    <div v-for=\"(shape, index) in currentShapes\" :key=\"`${shape.name}-${index}`\">\n      <Block :shape=\"shapes[shape.name]\" :name=\"shape.name\" :index=\"index\" @shapeClicked=\"handleShapeClicked\"\n             @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" :color=\"shape.color\" :power=\"shape.power\" :id=\"shape.id\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'ShapeSelection',\n  components: { Block },\n  props: {\n    shapes: {\n      type: Object,\n      required: true\n    },\n    currentShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleShapeClicked(event) {\n      this.$emit('shapeClicked', event);\n    },\n    handleShapeDragged(event) {\n      this.$emit('shapeDragged', event);\n    },\n    handleShapeDropped(event) {\n      this.$emit('shapeDropped', event);\n    }\n  }\n};\n</script>","<template>\n  <div class=\"shape\" \n       @mousedown=\"handleMouseDown\" \n       @mousemove=\"handleMouseMove\" \n       @mouseup=\"handleMouseUp\" \n       @touchstart=\"handleTouchStart\"\n       @touchmove=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       :style=\"shapeStyle\">\n      <div class=\"row\" v-for=\"(row, rowIndex) in shape\" :key=\"rowIndex\">\n          <div class=\"block\" :class=\"{'fill': applyStyles(rowIndex, blockIndex), 'dragging': isDragging}\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"  :style=\"applyStyles(rowIndex, blockIndex)\">\n          </div>\n      </div>\n  </div>\n  {{ power }}\n</template>\n\n<script>\nimport './Block.css';\nconst OFFSET_UP = 10;\nexport default {\n  name: 'BlockComponent',\n  props: {\n    name: {\n      type: String,\n      required: false,\n      default: 'Block'\n    },\n    shape: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    disableDragging: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      required: true\n    },\n    power: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    id: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      blockStyle: {},\n      offsetX: 0,\n      offsetY: 0,\n      touchCurrentX: 0,\n      touchCurrentY: 0,\n      isDragging: false,\n    };\n  },\n  computed: {\n    shapeStyle() {\n      if (this.isDragging) {\n        return {\n          position: 'absolute',\n          left: `${this.touchCurrentX}px`,\n          top: `${this.touchCurrentY}px`,\n          zIndex: 1000,\n        };\n      }\n      return {};\n    }\n  },\n  methods: {\n    applyStyles(rowIndex, blockIndex) {\n      if (!this.shape) return;\n      if(this.shape[rowIndex][blockIndex]) {\n        return {\n          background: `linear-gradient(145deg, ${this.color}, ${this.color} 50%, ${this.color} 50%, ${this.color} 100%)`,\n        }\n      }\n    },\n    handleMouseDown(event) {\n      if (this.disableDragging) return;\n      const rect = event.target.getBoundingClientRect();\n      this.offsetX = event.clientX - rect.left;\n      this.offsetY = event.clientY - rect.top;\n\n      this.touchCurrentX = event.clientX - this.offsetX;\n      this.touchCurrentY = event.clientY - this.offsetY - OFFSET_UP;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color, power: this.power, id: this.id});\n    },\n    handleMouseMove(event) {\n      event.preventDefault();\n      if (!this.isDragging || this.disableDragging) return;\n      this.touchCurrentX = event.clientX - this.offsetX;\n      this.touchCurrentY = event.clientY - this.offsetY - OFFSET_UP;\n      this.$emit('shapeDragged', { name: this.name, clientX: event.clientX, clientY: event.clientY - this.offsetY - OFFSET_UP, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleMouseUp(event) {\n      if (this.disableDragging) return;\n      this.isDragging = false;\n      this.$emit('shapeDropped', { name: this.name, clientX: event.clientX, clientY: event.clientY - OFFSET_UP, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchStart(event) {\n      if (this.disableDragging) return;\n      event.preventDefault();\n      const rect = event.target.parentElement.getBoundingClientRect();\n      this.offsetX = event.touches[0].clientX - rect.left;\n      this.offsetY = event.touches[0].clientY - rect.top;\n\n      this.touchCurrentX = event.touches[0].clientX - this.offsetX;\n      this.touchCurrentY = (event.touches[0].clientY - this.offsetY) - OFFSET_UP;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color, power: this.power, id: this.id});\n    },\n    handleTouchMove(event) {\n      if (this.disableDragging) return;\n      const touch = event.touches[0];\n      this.touchCurrentX = touch.clientX - this.offsetX;\n      this.touchCurrentY = (touch.clientY - this.offsetY) - OFFSET_UP;\n      this.$emit('shapeDragged', { name: this.name, clientX: touch.clientX, clientY: (touch.clientY - this.offsetY) - OFFSET_UP, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchEnd(event) {\n      if (this.disableDragging) return;\n      this.isDragging = false;\n      const touch = event.changedTouches[0];\n      this.$emit('shapeDropped', { name: this.name, clientX: touch.clientX, clientY: touch.clientY - (OFFSET_UP), offsetX: this.offsetX, offsetY: this.offsetY});\n    },\n  },\n}\n</script>\n","import { render } from \"./Block.vue?vue&type=template&id=3aee9244\"\nimport script from \"./Block.vue?vue&type=script&lang=js\"\nexport * from \"./Block.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ShapeSelection.vue?vue&type=template&id=41ea72b1\"\nimport script from \"./ShapeSelection.vue?vue&type=script&lang=js\"\nexport * from \"./ShapeSelection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"custom-piece-overlay\" v-if=\"visible\">\n    <div class=\"custom-piece-overlay-content\">\n      <h2>Create Your Custom Piece</h2>\n      <div class=\"custom-piece-grid\">\n        <div class=\"custom-piece-row\" v-for=\"(row, rowIndex) in piece\" :key=\"rowIndex\">\n          <div class=\"custom-piece-cell\" v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\"\n               :class=\"{ 'filled': cell }\"\n               @click=\"toggleCell(rowIndex, cellIndex)\">\n          </div>\n        </div>\n      </div>\n      <div class=\"custom-piece-controls\">\n        <button class=\"custom-piece-button\" @click=\"savePiece\" :disabled=\"blockCount > 6\">Save</button>\n        <button class=\"custom-piece-button\" @click=\"cancel\">Cancel</button>\n      </div>\n      <p>Blocks: {{ blockCount }} / 6</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport './CustomPieceCreator.css';\nexport default {\n  name: 'CustomPieceCreator',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      piece: Array.from({ length: 4 }, () => Array(4).fill(0))\n    };\n  },\n  computed: {\n    blockCount() {\n      return this.piece.flat().filter(cell => cell === 1).length;\n    }\n  },\n  methods: {\n    toggleCell(row, col) {\n      if (this.piece[row][col] === 1) {\n        this.piece[row][col] = 0;\n      } else if (this.blockCount < 6) {\n        this.piece[row][col] = 1;\n      }\n    },\n    savePiece() {\n      this.$emit('save', this.piece);\n    },\n    cancel() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>","import { render } from \"./CustomPieceCreator.vue?vue&type=template&id=618b4f1e\"\nimport script from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\nexport * from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"select-shapes-overlay\" v-if=\"visible\">\n    <div class=\"select-shapes-content\">\n      <div class=\"select-shapes-grid\">\n        <div\n          class=\"select-shapes-cell\"\n          v-for=\"(shape, shapeName) in shapes\"\n          :key=\"shapeName\"\n          :class=\"{ selected: selectedShapes.includes(shapeName) }\"\n          @click=\"toggleShapeSelection(shapeName)\"\n        >\n          <Block :shape=\"shape\" :name=\"shapeName\" :disableDragging=\"true\" />\n        </div>\n      </div>\n      <div class=\"select-shapes-controls\">\n        <button class=\"select-shapes-button\" @click=\"saveSelection\">Save</button>\n        <button class=\"select-shapes-button\" @click=\"cancelSelection\">Cancel</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'SelectShapes',\n  components: { Block },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    shapes: {\n      type: Object,\n      required: true\n    },\n    initialSelectedShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedShapes: []\n    };\n  },\n  watch: {\n    initialSelectedShapes: {\n      immediate: true,\n      handler(newVal) {\n        this.selectedShapes = [...newVal];\n      }\n    }\n  },\n  methods: {\n    toggleShapeSelection(shapeName) {\n      const index = this.selectedShapes.indexOf(shapeName);\n      if (index > -1) {\n        this.selectedShapes.splice(index, 1);\n      } else {\n        this.selectedShapes.push(shapeName);\n      }\n    },\n    saveSelection() {\n      this.$emit('save', this.selectedShapes);\n    },\n    cancelSelection() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>\n\n<style>\n.select-shapes-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.select-shapes-content {\n  background: linear-gradient(to bottom, #4358ad, #2c3e75);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 90%;\n  max-width: 600px;\n}\n\n.select-shapes-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  margin-bottom: 20px;\n  max-height: 70vh;\n  overflow-y: auto;\n}\n\n.select-shapes-cell {\n  background: #333;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.select-shapes-cell.selected {\n  background: #ff0;\n}\n\n.select-shapes-controls {\n  display: flex;\n  justify-content: space-between;\n}\n\n.select-shapes-button {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #232b54;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  color: #fff;\n  font-weight: bold;\n}\n\n.select-shapes-button:hover {\n  background-color: #1e264a;\n}\n</style>","import { render } from \"./SelectShapes.vue?vue&type=template&id=86021f54\"\nimport script from \"./SelectShapes.vue?vue&type=script&lang=js\"\nexport * from \"./SelectShapes.vue?vue&type=script&lang=js\"\n\nimport \"./SelectShapes.vue?vue&type=style&index=0&id=86021f54&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GameBoard.vue?vue&type=template&id=843603e4\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=42da9d62\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=42da9d62&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpower_blocks\"] = self[\"webpackChunkpower_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6601); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GameBoard","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_ScoreBoard","highScore","$data","scoreDisplay","isHighScoreAnimated","_hoisted_2","_component_GameGrid","board","hoverCells","onDragover","_ctx","handleDragOver","onDrop","$options","handleDrop","ref","_Fragment","_renderList","scoreAnimations","animation","id","style","_normalizeStyle","getAnimationStyle","_createTextVNode","_toDisplayString","points","_hoisted_3","text","_component_ShapeSelection","shapes","currentShapes","onShapeClicked","handleShapeClicked","onShapeDragged","handleShapeDragged","onShapeDropped","handleShapeDropped","gameOver","_hoisted_4","onClick","_cache","args","resetBoard","history","length","undoMove","_createCommentVNode","openCustomPieceCreator","openSelectShapes","href","target","rel","height","viewBox","version","width","d","_component_CustomPieceCreator","visible","isCustomPieceCreatorVisible","onSave","handleCustomPieceSave","onCancel","handleCustomPieceCancel","_component_SelectShapes","isSelectShapesVisible","initialSelectedShapes","selectedShapes","handleSelectShapesSave","handleSelectShapesCancel","$props","_normalizeClass","highlight","name","props","type","Number","required","Boolean","__exports__","_withModifiers","row","rowIndex","block","blockIndex","isHoverCell","isRemoveCell","applyCellStyle","Array","methods","event","this","$emit","col","some","cell","remove","background","shape","index","_component_Block","color","power","onMousedown","handleMouseDown","onMousemove","handleMouseMove","onMouseup","handleMouseUp","onTouchstart","handleTouchStart","onTouchmove","handleTouchMove","onTouchend","handleTouchEnd","shapeStyle","applyStyles","isDragging","OFFSET_UP","String","default","disableDragging","data","blockStyle","offsetX","offsetY","touchCurrentX","touchCurrentY","computed","position","left","top","zIndex","rect","getBoundingClientRect","clientX","clientY","preventDefault","parentElement","touches","touch","changedTouches","components","Block","Object","piece","cellIndex","$event","toggleCell","_hoisted_5","savePiece","disabled","blockCount","_hoisted_6","cancel","from","fill","flat","filter","shapeName","selected","includes","toggleShapeSelection","saveSelection","cancelSelection","watch","immediate","handler","newVal","indexOf","splice","push","CustomPieceCreator","GameGrid","ScoreBoard","ShapeSelection","SelectShapes","square","line","line2","line3","line4","line5","line6","t","t2","t3","t4","single","l","l2","l3","l4","l5","j","s","z","bCorner","bCorner2","bCorner3","bCorner4","bSquare","rectangle","rectangle2","corner","corner2","corner3","corner4","u","u2","u3","u4","powers","colors","selectedShape","selectedShapeColor","selectedShapePower","score","combo","rowsOrColumnsCompleted","newValue","oldValue","incrementScoreDisplay","animateHighScore","increment","interval","setInterval","clearInterval","setTimeout","Math","max","getRandomShapes","saveState","addShape","checkCollision","saveHistory","shapeBlocks","i","removeShape","applyPowerEffect","completedRows","rowPositions","checkRows","completedColumns","colPositions","checkColumns","totalCompleted","rowPoints","colPoints","rowColPoints","multiBonus","comboBonus","totalPoints","showScoreAnimation","updateBoard","checkGameOver","forEach","removeRow","removeColumn","checkBoardClear","applyBombPower","applyFillBombPower","applyCrossBombPower","applyCrossFillPower","applyFillAllPower","applyRemoveRowPower","applyRemoveColumnPower","applyFillRowPower","applyFillColumnPower","undefined","map","every","parseFloat","boardRect","$refs","gameBoard","$el","dropX","dropY","floor","updateHoverCells","clearHoverCells","dataTransfer","getData","findIndex","random","Date","now","addPowerHoverCells","addCells","rowStart","rowEnd","colStart","colEnd","flatMap","r","c","JSON","parse","stringify","state","localStorage","setItem","previousState","pop","grid","customShape","custom","toString","isRow","anim","size","transition","opacity","mounted","savedGameState","getItem","keys","GameBoard","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}